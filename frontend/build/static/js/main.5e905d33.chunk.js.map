{"version":3,"sources":["constants/productConstants.js","constants/stockConstants.js","constants/cartConstants.js","constants/userConstants.js","constants/orderConstants.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","reducers/stockReducer.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Loader.js","components/Message.js","actions/productActions.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartAction.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterUserScreen.js","screens/RegisterProdScreen.js","screens/ProfileScreen.js","components/CheckoutSteps.js","screens/ShipingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","actions/orderActions.js","screens/OrderScreen.js","screens/FridgeScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","screens/StockScreen.js","actions/stockAction.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","STOCK_LIST_REQUEST","STOCK_LIST_SUCCESS","STOCK_LIST_FAIL","STOCK_DELETE_REQUEST","STOCK_DELETE_SUCCESS","STOCK_DELETE_FAIL","STOCK_CREATE_REQUEST","STOCK_CREATE_SUCCESS","STOCK_CREATE_FAIL","STOCK_CREATE_RESET","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","PROD_REGISTER_REQUEST","PROD_REGISTER_SUCCESS","PROD_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","PROD_DETAILS_REQUEST","PROD_DETAILS_SUCCESS","PROD_DETAILS_FAIL","PROD_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","PROD_UPDATE_PROFILE_REQUEST","PROD_UPDATE_PROFILE_SUCCESS","PROD_UPDATE_PROFILE_FAIL","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_ITEMS_LIST_REQUEST","ORDER_ITEMS_LIST_SUCCESS","ORDER_ITEMSLIST_FAIL","ORDER_ITEMSLIST_RESET","reducer","combineReducers","productList","state","products","action","type","loading","payload","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","cart","cartItems","shippingAdress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","prodRegister","userDetails","user","prodDetails","prod","userUpdateProfile","prodUpdate","successProd","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","shippingAddress","orderPay","orderListMy","orders","orderList","ordersItems","stockItems","stocks","stockCreate","stock","stockDelete","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","logout","dispatch","removeItem","getUserDetails","id","getState","a","config","headers","Authorization","token","axios","get","data","message","response","Header","useDispatch","useSelector","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","alt","src","width","height","className","Toggle","aria-controls","Collapse","Nav","Link","NavDropdown","title","name","Item","onClick","isAdmin","Footer","Row","Col","Rating","value","text","color","style","defaultProps","propTypes","PropTypes","number","isRequired","string","Product","Card","_id","Img","image","variant","Body","textDecoration","Title","as","Text","rating","numReviews","price","Loader","Spinner","animation","role","margin","display","Message","children","Alert","listProducts","listProductDetails","HomeScreen","useEffect","sm","md","lg","ProductScreen","history","match","useState","qty","setQty","params","ingredients","composition","ingrTable","key","push","Image","fluid","ListGroup","expDate","countInStock","Form","Control","onChange","e","target","Array","keys","Button","disabled","description","nutriScore","addToCart","isPromp","setItem","stringify","CartScreen","location","productId","search","Number","split","console","log","removeFromCartHandler","removeFromCart","length","rounded","reduce","acc","toFixed","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","onSubmit","preventDefault","Headers","post","login","Group","controlId","Label","placeholder","marginTop","RegisterUserScreen","setName","confirmPassword","setConfirmPassword","setMessage","registerUser","RegisterProdScreen","numSiret","setSiret","companyName","setCompanyName","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","companyAddress","registerProd","ProfileScreen","isProd","put","updateProdProfile","updateUserProfile","CheckoutSteps","step1","step2","step3","step4","ShipingScreen","required","PayementScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","totalPrice","index","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","addPayPalScript","clientId","script","document","createElement","async","onload","body","appendChild","isPaid","window","paypal","href","isDelivered","deliveredAt","paidAt","amount","onSuccess","paymentResult","payOrder","FridgeScreen","loadingOrderItems","errorOrderItems","dateNow","Date","loadingOrders","errorOrders","Table","striped","bordered","hover","responsive","calssName","createdAt","substring","deliveredAtAt","colspan","orderItem","Moment","diff","backgroundColor","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","UserEditScreen","userId","setIsAdmin","loadingUpdate","errorUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","float","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","energyKJ","setEnergyKj","energyKcal","setEnergyKcal","fat","setFat","acids","setAcids","carbohydrates","setCarbohydrates","sugars","setSugars","fiber","setFiber","protein","setProtein","salt","setSalt","origCode","setOrigCode","fabCode","setFabCode","prodCode","setProdCode","contrCode","setContrCode","setIsPromp","setNutriScore","setExpDate","prodDate","setProdDate","barreCode","EnergyKJ","EnergyKcal","Fat","Acids","Carbohydrates","Sugars","Fiber","Protein","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","OrderListScreen","StockScreen","lequdationDate","setLequdationDate","receptionDate","setReceptionDate","total","deleteStock","reload","createStock","class","totalItems","totalStock","App","path","component","exact","PaymentScreen","StockListScreen","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","s1","s0","getElementsByTagName","charset","setAttribute","parentNode","insertBefore","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.5e905d33.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST';\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS';\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL';\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST';\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS';\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL';\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST';\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS';\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL';\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST';\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS';\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL';\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET';\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST';\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS';\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL';\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET';\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST';\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS';\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL';\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET';\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST';\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS';\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL';\r\n","export const STOCK_LIST_REQUEST = 'STOCK_LIST_REQUEST';\r\nexport const STOCK_LIST_SUCCESS = 'STOCK_LIST_SUCCESS';\r\nexport const STOCK_LIST_FAIL = 'STOCK_LIST_FAIL';\r\n\r\nexport const STOCK_DELETE_REQUEST = 'STOCK_DELETE_REQUEST';\r\nexport const STOCK_DELETE_SUCCESS = 'STOCK_DELETE_SUCCESS';\r\nexport const STOCK_DELETE_FAIL = 'STOCK_DELETE_FAIL';\r\n\r\nexport const STOCK_CREATE_REQUEST = 'STOCK_CREATE_REQUEST';\r\nexport const STOCK_CREATE_SUCCESS = 'STOCK_CREATE_SUCCESS';\r\nexport const STOCK_CREATE_FAIL = 'STOCK_CREATE_FAIL';\r\nexport const STOCK_CREATE_RESET = 'STOCK_CREATE_RESET';\r\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM';\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM';\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS';\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD';\r\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST';\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS';\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL';\r\nexport const USER_LOGOUT = 'USER_LOGOUT';\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST';\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS';\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL';\r\n\r\nexport const PROD_REGISTER_REQUEST = 'PROD_REGISTER_REQUEST';\r\nexport const PROD_REGISTER_SUCCESS = 'PROD_REGISTER_SUCCESS';\r\nexport const PROD_REGISTER_FAIL = 'PROD_REGISTER_FAIL';\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST';\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS';\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL';\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET';\r\n\r\nexport const PROD_DETAILS_REQUEST = 'PROD_DETAILS_REQUEST';\r\nexport const PROD_DETAILS_SUCCESS = 'PROD_DETAILS_SUCCESS';\r\nexport const PROD_DETAILS_FAIL = 'PROD_DETAILS_FAIL';\r\nexport const PROD_DETAILS_RESET = 'PROD_DETAILS_RESET';\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST';\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS';\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL';\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET';\r\n\r\nexport const PROD_UPDATE_PROFILE_REQUEST = 'PROD_UPDATE_PROFILE_REQUEST';\r\nexport const PROD_UPDATE_PROFILE_SUCCESS = 'PROD_UPDATE_PROFILE_SUCCESS';\r\nexport const PROD_UPDATE_PROFILE_FAIL = 'PROD_UPDATE_PROFILE_FAIL';\r\nexport const PROD_UPDATE_PROFILE_RESET = 'PROD_UPDATE_PROFILE_RESET';\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST';\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS';\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL';\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET';\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST';\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS';\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL';\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST';\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS';\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL';\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET';\r\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST';\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS';\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL';\r\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET';\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST';\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS';\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL';\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST';\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS';\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL';\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET';\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST';\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS';\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL';\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET';\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST';\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS';\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL';\r\n\r\nexport const ORDER_ITEMS_LIST_REQUEST = 'ORDER_ITEMS_LIST_REQUEST';\r\nexport const ORDER_ITEMS_LIST_SUCCESS = 'ORDER_ITEMS_LIST_SUCCESS';\r\nexport const ORDER_ITEMSLIST_FAIL = 'ORDER_ITEMS_LIST_FAIL';\r\nexport const ORDER_ITEMSLIST_RESET = 'ORDER_ITEMS_LIST_RESET';\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST';\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS';\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL';\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET';\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport {\r\n  productListReducer,\r\n  productDetailsReducer,\r\n  productDeleteReducer,\r\n  productCreateReducer,\r\n  productUpdateReducer,\r\n} from './reducers/productReducers';\r\nimport { stockListReducer, stockCreateReducer , stocktDeleteReducer } from './reducers/stockReducer';\r\n\r\nimport { cartReducer } from './reducers/cartReducers';\r\nimport {\r\n  userLoginReducer,\r\n  userRegisterReducer,\r\n  prodRegisterReducer,\r\n  userDetailsReducer,\r\n  prodDetailsReducer,\r\n  userUpdateProfileReducer,\r\n  prodUpdateProfileReducer,\r\n  userListReducer,\r\n  userDeleteReducer,\r\n  userUpdateReducer,\r\n} from './reducers/userReducers';\r\nimport {\r\n  orderCreateReducer,\r\n  orderDetailsReducer,\r\n  orderPayReducer,\r\n  orderListMyReducer,\r\n  orderItemsReducer,\r\n  orderListReducer,\r\n} from './reducers/orderReducers';\r\n\r\nconst reducer = combineReducers({\r\n  productList: productListReducer,\r\n  productDetails: productDetailsReducer,\r\n  productDelete: productDeleteReducer,\r\n  productCreate: productCreateReducer,\r\n  productUpdate: productUpdateReducer,\r\n  cart: cartReducer,\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n  prodRegister: prodRegisterReducer,\r\n  userDetails: userDetailsReducer,\r\n  prodDetails: prodDetailsReducer,\r\n  userUpdateProfile: userUpdateProfileReducer,\r\n  prodUpdate: prodUpdateProfileReducer,\r\n  userList: userListReducer,\r\n  userDelete: userDeleteReducer,\r\n  userUpdate: userUpdateReducer,\r\n  orderCreate: orderCreateReducer,\r\n  orderDetails: orderDetailsReducer,\r\n  orderPay: orderPayReducer,\r\n  orderListMy: orderListMyReducer,\r\n  orderList: orderListReducer,\r\n  orderItems: orderItemsReducer,\r\n\r\n  stockItems: stockListReducer,\r\n  stockCreate: stockCreateReducer,\r\n  stockDelete : stocktDeleteReducer ,\r\n});\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\r\n  ? JSON.parse(localStorage.getItem('cartItems'))\r\n  : [];\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n  ? JSON.parse(localStorage.getItem('userInfo'))\r\n  : null;\r\n\r\nconst shippingAdressFromStorage = localStorage.getItem('shippingAdress')\r\n  ? JSON.parse(localStorage.getItem('shippingAdress'))\r\n  : {};\r\n\r\nconst initialState = {\r\n  cart: {\r\n    cartItems: cartItemsFromStorage,\r\n    shippingAdress: shippingAdressFromStorage,\r\n  },\r\n  userLogin: { userInfo: userInfoFromStorage },\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import {\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_SUCCESS,\r\n  PRODUCT_DELETE_FAIL,\r\n  PRODUCT_CREATE_RESET,\r\n  PRODUCT_CREATE_FAIL,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_UPDATE_FAIL,\r\n  PRODUCT_UPDATE_RESET,\r\n  PRODUCT_CREATE_REVIEW_REQUEST,\r\n  PRODUCT_CREATE_REVIEW_SUCCESS,\r\n  PRODUCT_CREATE_REVIEW_FAIL,\r\n  PRODUCT_CREATE_REVIEW_RESET,\r\n  PRODUCT_TOP_REQUEST,\r\n  PRODUCT_TOP_SUCCESS,\r\n  PRODUCT_TOP_FAIL,\r\n} from '../constants/productConstants';\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_LIST_REQUEST:\r\n      return { loading: true, products: [] };\r\n    case PRODUCT_LIST_SUCCESS:\r\n      return { loading: false, products: action.payload };\r\n    case PRODUCT_LIST_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const productDetailsReducer = (\r\n  state = { product: { reviews: [] } },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case PRODUCT_DETAILS_REQUEST:\r\n      return { loading: true, ...state };\r\n    case PRODUCT_DETAILS_SUCCESS:\r\n      return { loading: false, product: action.payload };\r\n    case PRODUCT_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_DELETE_REQUEST:\r\n      return { loading: true };\r\n    case PRODUCT_DELETE_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case PRODUCT_DELETE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_CREATE_REQUEST:\r\n      return { loading: true };\r\n    case PRODUCT_CREATE_SUCCESS:\r\n      return { loading: false, success: true, product: action.payload };\r\n    case PRODUCT_CREATE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case PRODUCT_CREATE_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const productUpdateReducer = (state = { product: {} }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_UPDATE_REQUEST:\r\n      return { loading: true };\r\n    case PRODUCT_UPDATE_SUCCESS:\r\n      return { loading: false, success: true, product: action.payload };\r\n    case PRODUCT_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case PRODUCT_UPDATE_RESET:\r\n      return { product: {} };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const productReviewCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_CREATE_REVIEW_REQUEST:\r\n      return { loading: true };\r\n    case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case PRODUCT_CREATE_REVIEW_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case PRODUCT_CREATE_REVIEW_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_TOP_REQUEST:\r\n      return { loading: true, products: [] };\r\n    case PRODUCT_TOP_SUCCESS:\r\n      return { loading: false, products: action.payload };\r\n    case PRODUCT_TOP_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  CART_ADD_ITEM,\r\n  CART_REMOVE_ITEM,\r\n  CART_SAVE_PAYMENT_METHOD,\r\n  CART_SAVE_SHIPPING_ADDRESS,\r\n} from '../constants/cartConstants';\r\n\r\nexport const cartReducer = (\r\n  state = { cartItems: [], shippingAdress: {} },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case CART_ADD_ITEM:\r\n      const item = action.payload;\r\n\r\n      const existItem = state.cartItems.find((x) => x.product === item.product);\r\n\r\n      if (existItem) {\r\n        return {\r\n          ...state,\r\n          cartItems: state.cartItems.map((x) =>\r\n            x.product === existItem.product ? item : x\r\n          ),\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          cartItems: [...state.cartItems, item],\r\n        };\r\n      }\r\n    case CART_REMOVE_ITEM:\r\n      return {\r\n        ...state,\r\n        cartItems: state.cartItems.filter((x) => x.product !== action.payload),\r\n      };\r\n    case CART_SAVE_SHIPPING_ADDRESS:\r\n      return {\r\n        ...state,\r\n        shippingAdress: action.payload,\r\n      };\r\n    case CART_SAVE_PAYMENT_METHOD:\r\n      return {\r\n        ...state,\r\n        paymentMethod: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  PROD_DETAILS_FAIL,\r\n  PROD_DETAILS_REQUEST,\r\n  PROD_DETAILS_SUCCESS,\r\n  PROD_REGISTER_FAIL,\r\n  PROD_REGISTER_REQUEST,\r\n  PROD_REGISTER_SUCCESS,\r\n  PROD_UPDATE_PROFILE_FAIL,\r\n  PROD_UPDATE_PROFILE_REQUEST,\r\n  PROD_UPDATE_PROFILE_SUCCESS,\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_RESET,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  PROD_DETAILS_RESET,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_RESET,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_FAIL,\r\n  USER_UPDATE_RESET,\r\n} from '../constants/userConstants';\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_LOGIN_REQUEST:\r\n      return { loading: true };\r\n    case USER_LOGIN_SUCCESS:\r\n      return { loading: false, userInfo: action.payload };\r\n    case USER_LOGIN_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_LOGOUT:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_REGISTER_REQUEST:\r\n      return { loading: true };\r\n    case USER_REGISTER_SUCCESS:\r\n      return { loading: false, userInfo: action.payload };\r\n    case USER_REGISTER_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const prodRegisterReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PROD_REGISTER_REQUEST:\r\n      return { loading: true };\r\n    case PROD_REGISTER_SUCCESS:\r\n      return { loading: false, userInfo: action.payload };\r\n    case PROD_REGISTER_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case USER_DETAILS_REQUEST:\r\n      return { ...state, loading: true };\r\n    case USER_DETAILS_SUCCESS:\r\n      return { loading: false, user: action.payload };\r\n    case USER_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const prodDetailsReducer = (state = { prod: {} }, action) => {\r\n  switch (action.type) {\r\n    case PROD_DETAILS_REQUEST:\r\n      return { ...state, loading: true };\r\n    case PROD_DETAILS_SUCCESS:\r\n      return { loading: false, prod: action.payload };\r\n    case PROD_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case PROD_DETAILS_RESET:\r\n      return { prod: {} };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_PROFILE_REQUEST:\r\n      return { loading: true };\r\n    case USER_UPDATE_PROFILE_SUCCESS:\r\n      return { loading: false, success: true, userInfo: action.payload };\r\n    case USER_UPDATE_PROFILE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const prodUpdateProfileReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PROD_UPDATE_PROFILE_REQUEST:\r\n      return { loading: true };\r\n    case PROD_UPDATE_PROFILE_SUCCESS:\r\n      return { loading: false, successProd: true, userInfo: action.payload };\r\n    case PROD_UPDATE_PROFILE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n  switch (action.type) {\r\n    case USER_LIST_REQUEST:\r\n      return { loading: true };\r\n    case USER_LIST_SUCCESS:\r\n      return { loading: false, users: action.payload };\r\n    case USER_LIST_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_LIST_RESET:\r\n      return { users: [] };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_DELETE_REQUEST:\r\n      return { loading: true };\r\n    case USER_DELETE_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case USER_DELETE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_REQUEST:\r\n      return { loading: true };\r\n    case USER_UPDATE_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case USER_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_UPDATE_RESET:\r\n      return {\r\n        user: {},\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_PAY_FAIL,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_PAY_RESET,\r\n  ORDER_LIST_MY_REQUEST,\r\n  ORDER_LIST_MY_SUCCESS,\r\n  ORDER_LIST_MY_FAIL,\r\n  ORDER_LIST_MY_RESET,\r\n  ORDER_LIST_FAIL,\r\n  ORDER_LIST_SUCCESS,\r\n  ORDER_LIST_REQUEST,\r\n  ORDER_DELIVER_FAIL,\r\n  ORDER_DELIVER_SUCCESS,\r\n  ORDER_DELIVER_REQUEST,\r\n  ORDER_DELIVER_RESET,\r\n  ORDER_CREATE_RESET,\r\n  ORDER_ITEMS_LIST_REQUEST,\r\n  ORDER_ITEMS_LIST_SUCCESS,\r\n  ORDER_ITEMSLIST_FAIL,\r\n  ORDER_ITEMSLIST_RESET,\r\n} from '../constants/orderConstants';\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_CREATE_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case ORDER_CREATE_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n        order: action.payload,\r\n      };\r\n    case ORDER_CREATE_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case ORDER_CREATE_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const orderDetailsReducer = (\r\n  state = { loading: true, orderItems: [], shippingAddress: {} },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case ORDER_DETAILS_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case ORDER_DETAILS_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        order: action.payload,\r\n      };\r\n    case ORDER_DETAILS_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_PAY_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case ORDER_PAY_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n      };\r\n    case ORDER_PAY_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case ORDER_PAY_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_DELIVER_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case ORDER_DELIVER_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n      };\r\n    case ORDER_DELIVER_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case ORDER_DELIVER_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\r\n  switch (action.type) {\r\n    case ORDER_LIST_MY_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case ORDER_LIST_MY_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        orders: action.payload,\r\n      };\r\n    case ORDER_LIST_MY_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case ORDER_LIST_MY_RESET:\r\n      return { orders: [] };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport const orderItemsReducer = (state = { ordersItems: [] }, action) => {\r\n  switch (action.type) {\r\n    case ORDER_ITEMS_LIST_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case ORDER_ITEMS_LIST_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        ordersItems: action.payload,\r\n      };\r\n    case ORDER_ITEMSLIST_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case ORDER_ITEMSLIST_RESET:\r\n      return { ordersItems: [] };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const orderListReducer = (state = { orders: [] }, action) => {\r\n  switch (action.type) {\r\n    case ORDER_LIST_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case ORDER_LIST_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        orders: action.payload,\r\n      };\r\n    case ORDER_LIST_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  STOCK_LIST_REQUEST,\r\n  STOCK_LIST_SUCCESS,\r\n  STOCK_LIST_FAIL,\r\n  STOCK_DELETE_REQUEST,\r\n  STOCK_DELETE_SUCCESS,\r\n  STOCK_DELETE_FAIL,\r\n  STOCK_CREATE_RESET,\r\n  STOCK_CREATE_FAIL,\r\n  STOCK_CREATE_SUCCESS,\r\n  STOCK_CREATE_REQUEST,\r\n} from '../constants/stockConstants';\r\n\r\nexport const stockListReducer = (state = { stocks: [] }, action) => {\r\n  switch (action.type) {\r\n    case STOCK_LIST_REQUEST:\r\n      return { loading: true, stocks: [] };\r\n    case STOCK_LIST_SUCCESS:\r\n      return { loading: false, stocks: action.payload };\r\n    case STOCK_LIST_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const stockCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case STOCK_CREATE_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case STOCK_CREATE_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n        stock: action.payload,\r\n      };\r\n    case STOCK_CREATE_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case STOCK_CREATE_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n\r\nexport const stocktDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case STOCK_DELETE_REQUEST:\r\n      return { loading: true };\r\n    case STOCK_DELETE_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case STOCK_DELETE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import axios from 'axios';\r\n\r\nimport {\r\n  PROD_DETAILS_FAIL,\r\n  PROD_DETAILS_REQUEST,\r\n  PROD_DETAILS_SUCCESS,\r\n  PROD_REGISTER_FAIL,\r\n  PROD_REGISTER_REQUEST,\r\n  PROD_REGISTER_SUCCESS,\r\n  PROD_UPDATE_PROFILE_FAIL,\r\n  PROD_UPDATE_PROFILE_REQUEST,\r\n  PROD_UPDATE_PROFILE_SUCCESS,\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_DETAILS_RESET,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  PROD_DETAILS_RESET,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_RESET,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n  USER_UPDATE_FAIL,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_REQUEST,\r\n} from '../constants/userConstants';\r\n\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants';\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LOGIN_REQUEST,\r\n    });\r\n\r\n    const config = {\r\n      Headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      '/api/users/login',\r\n      { email, password },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem('userInfo');\r\n  dispatch({ type: USER_LOGOUT });\r\n  // dispatch({ type: USER_DETAILS_RESET });\r\n  // dispatch({ type: PROD_DETAILS_RESET });\r\n  dispatch({ type: ORDER_LIST_MY_RESET });\r\n};\r\n\r\nexport const registerUser = (name, email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_REGISTER_REQUEST,\r\n    });\r\n\r\n    const config = {\r\n      Headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      '/api/users',\r\n      { name, email, password },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_REGISTER_SUCCESS,\r\n      payload: data,\r\n    });\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const registerProd =\r\n  (name, email, password, companyName, numSiret, companyAddress) =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch({\r\n        type: PROD_REGISTER_REQUEST,\r\n      });\r\n\r\n      const config = {\r\n        Headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\r\n        '/api/users/pro',\r\n        {\r\n          name,\r\n          email,\r\n          password,\r\n          companyName,\r\n          numSiret,\r\n          companyAddress,\r\n        },\r\n        config\r\n      );\r\n\r\n      dispatch({\r\n        type: PROD_REGISTER_SUCCESS,\r\n        payload: data,\r\n      });\r\n      dispatch({\r\n        type: USER_LOGIN_SUCCESS,\r\n        payload: data,\r\n      });\r\n\r\n      localStorage.setItem('userInfo', JSON.stringify(data));\r\n    } catch (error) {\r\n      dispatch({\r\n        type: PROD_REGISTER_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DETAILS_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/users/${id}`, config);\r\n\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: USER_DETAILS_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProdDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PROD_DETAILS_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      Headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/users/${id}`, config);\r\n\r\n    dispatch({\r\n      type: PROD_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PROD_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(`/api/users/profile`, user, config);\r\n\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateProdProfile = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PROD_UPDATE_PROFILE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(`/api/users/profilepro`, user, config);\r\n\r\n    dispatch({\r\n      type: PROD_UPDATE_PROFILE_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: PROD_UPDATE_PROFILE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LIST_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/users`, config);\r\n\r\n    dispatch({\r\n      type: USER_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: USER_LIST_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DELETE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    await axios.delete(`/api/users/${id}`, config);\r\n\r\n    dispatch({ type: USER_DELETE_SUCCESS });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: USER_DELETE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(`/api/users/${user._id}`, user, config);\r\n\r\n    dispatch({ type: USER_UPDATE_SUCCESS });\r\n\r\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: USER_UPDATE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Navbar, Nav, Container } from 'react-bootstrap';\r\nimport { NavDropdown } from 'react-bootstrap';\r\nimport { logout } from '../actions/userActions';\r\n\r\nconst Header = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout());\r\n  };\r\n\r\n  return (\r\n    <header>\r\n      <Navbar bg='light' expand='lg' collapseOnSelect>\r\n        <Container>\r\n          <LinkContainer to='/'>\r\n            <Navbar.Brand>\r\n              <img\r\n                alt=''\r\n                src='\\brand\\JMB.png'\r\n                width='100'\r\n                height='40'\r\n                className='d-inline-block align-top'\r\n              />\r\n            </Navbar.Brand>\r\n          </LinkContainer>\r\n          <Navbar.Toggle aria-controls='basic-navbar-nav' />\r\n          <Navbar.Collapse id='basic-navbar-nav'>\r\n            <Nav className='ms-auto'>\r\n              <LinkContainer to='/cart'>\r\n                <Nav.Link>\r\n                  <i className='fas fa-shopping-cart'></i> Cart\r\n                </Nav.Link>\r\n              </LinkContainer>\r\n              {userInfo ? (\r\n                <NavDropdown title={userInfo.name} id='username'>\r\n                  <LinkContainer to='/profile'>\r\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to='/fridge'>\r\n                    <NavDropdown.Item>Fridge</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <NavDropdown.Item onClick={logoutHandler}>\r\n                    Logout\r\n                  </NavDropdown.Item>\r\n                </NavDropdown>\r\n              ) : (\r\n                <LinkContainer to='/login'>\r\n                  <Nav.Link>\r\n                    <i className='fas fa-user'></i> Sing In\r\n                  </Nav.Link>\r\n                </LinkContainer>\r\n              )}\r\n              {userInfo && userInfo.isAdmin && (\r\n                <NavDropdown title='Admin' id='adminmenu'>\r\n                  <LinkContainer to='/admin/userlist'>\r\n                    <NavDropdown.Item>Users</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to='/admin/productlist'>\r\n                    <NavDropdown.Item>Products</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to='/admin/orderlist'>\r\n                    <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to='/admin/stocklist'>\r\n                    <NavDropdown.Item>Stock</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                </NavDropdown>\r\n              )}\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <Container>\r\n        <Row>\r\n          <Col className='text-center py-3'>Copyright &copy; JMB Store</Col>\r\n        </Row>\r\n      </Container>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\n\r\nconst Rating = ({ value, text, color }) => {\r\n  return (\r\n    <div className='rating'>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 1\r\n              ? 'fas fa-star'\r\n              : value >= 0.5\r\n              ? 'fas fa-star-half-alt '\r\n              : 'far fa-star '\r\n          }\r\n        ></i>{' '}\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 2\r\n              ? 'fas fa-star'\r\n              : value >= 1.5\r\n              ? 'fas fa-star-half-alt '\r\n              : 'far fa-star '\r\n          }\r\n        ></i>{' '}\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 3\r\n              ? 'fas fa-star'\r\n              : value >= 2.5\r\n              ? 'fas fa-star-half-alt '\r\n              : 'far fa-star '\r\n          }\r\n        ></i>{' '}\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 4\r\n              ? 'fas fa-star'\r\n              : value >= 3.5\r\n              ? 'fas fa-star-half-alt '\r\n              : 'far fa-star '\r\n          }\r\n        ></i>{' '}\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 5\r\n              ? 'fas fa-star'\r\n              : value >= 4.5\r\n              ? 'fas fa-star-half-alt '\r\n              : 'far fa-star '\r\n          }\r\n        ></i>{' '}\r\n      </span>\r\n      <span>{text && text}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Rating;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card } from 'react-bootstrap';\r\nimport Rating from './Rating';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Product = ({ product }) => {\r\n  return (\r\n    <Card className='my-3 p-3 rounded'>\r\n      <Link to={`/product/${product._id}`}>\r\n        <Card.Img src={product.image} variant='top' />\r\n      </Link>\r\n      <Card.Body>\r\n        <Link to={`/product/${product._id}`} style={{ textDecoration: 'none' }}>\r\n          <Card.Title as='div'>\r\n            <strong className='text-info'>{product.name}</strong>\r\n          </Card.Title>\r\n        </Link>\r\n        <Card.Text as='div'>\r\n          <Rating\r\n            value={product.rating}\r\n            text={`${product.numReviews} reviews`}\r\n          />\r\n        </Card.Text>\r\n        <Card.Text as='h3'>€{product.price}</Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nRating.defaultProps = {\r\n  color: '#f8e825',\r\n};\r\nRating.propTypes = {\r\n  value: PropTypes.number.isRequired,\r\n  text: PropTypes.string.isRequired,\r\n  color: PropTypes.string,\r\n};\r\nexport default Product;\r\n","import React from 'react';\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <Spinner\r\n      animation='border'\r\n      role='status'\r\n      style={{\r\n        width: '100px',\r\n        height: '100px',\r\n        margin: 'auto',\r\n        display: 'block',\r\n      }}\r\n    >\r\n      <span className='sr-only'>Loading...</span>\r\n    </Spinner>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React from 'react';\r\nimport { Alert } from 'react-bootstrap';\r\n\r\nconst Message = ({ variant, children }) => {\r\n  return <Alert variant={variant}>{children}</Alert>;\r\n};\r\nMessage.defaultProps = {\r\n  variant: 'info',\r\n};\r\n\r\nexport default Message;\r\n","import axios from 'axios';\r\n\r\nimport {\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_DELETE_SUCCESS,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_FAIL,\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_CREATE_FAIL,\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_UPDATE_FAIL,\r\n  PRODUCT_CREATE_REVIEW_REQUEST,\r\n  PRODUCT_CREATE_REVIEW_SUCCESS,\r\n  PRODUCT_CREATE_REVIEW_FAIL,\r\n  PRODUCT_TOP_REQUEST,\r\n  PRODUCT_TOP_SUCCESS,\r\n  PRODUCT_TOP_FAIL,\r\n} from '../constants/productConstants';\r\n\r\nimport { logout } from './userActions';\r\n\r\nexport const listProducts = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_LIST_REQUEST });\r\n\r\n    const { data } = await axios.get('/api/products');\r\n\r\n    dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_DETAILS_REQUEST });\r\n\r\n    const { data } = await axios.get(`/api/products/${id}`);\r\n\r\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_DELETE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    await axios.delete(`/api/products/${id}`, config);\r\n\r\n    dispatch({\r\n      type: PRODUCT_DELETE_SUCCESS,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: PRODUCT_DELETE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(`/api/products`, {}, config);\r\n\r\n    dispatch({\r\n      type: PRODUCT_CREATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: PRODUCT_CREATE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      `/api/products/${product._id}`,\r\n      product,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createProductReview =\r\n  (productId, review) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: PRODUCT_CREATE_REVIEW_REQUEST,\r\n      });\r\n\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n\r\n      await axios.post(`/api/products/${productId}/reviews`, review, config);\r\n\r\n      dispatch({\r\n        type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n      });\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message;\r\n      if (message === 'Not authorized, token failed') {\r\n        dispatch(logout());\r\n      }\r\n      dispatch({\r\n        type: PRODUCT_CREATE_REVIEW_FAIL,\r\n        payload: message,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_TOP_REQUEST });\r\n\r\n    const { data } = await axios.get(`/api/products/top`);\r\n\r\n    dispatch({\r\n      type: PRODUCT_TOP_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_TOP_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport Product from '../components/Product';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport { listProducts } from '../actions/productActions';\r\n\r\nconst HomeScreen = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const productList = useSelector((state) => state.productList);\r\n  const { loading, error, products } = productList;\r\n\r\n  useEffect(() => {\r\n    dispatch(listProducts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <h1>Latest Products</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <Row>\r\n          {products.map((product) => (\r\n            <Col key={product._id} sm={12} md={6} lg={3}>\r\n              <Product product={product} />\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport {\r\n  Row,\r\n  Col,\r\n  Image,\r\n  ListGroup,\r\n  Card,\r\n  Button,\r\n  Form,\r\n} from 'react-bootstrap';\r\nimport Rating from '../components/Rating';\r\nimport { listProductDetails } from '../actions/productActions';\r\n\r\nconst ProductScreen = ({ history, match }) => {\r\n  const [qty, setQty] = useState(1);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const { loading, error, product } = productDetails;\r\n\r\n  useEffect(() => {\r\n    dispatch(listProductDetails(match.params.id));\r\n  }, [match, dispatch]);\r\n\r\n  //Add to cart Handler\r\n  const addToCartHandler = () => {\r\n    history.push(`/cart/${match.params.id}?qty=${qty}`);\r\n  };\r\n\r\n  const ingredients = product.composition;\r\n  const ingrTable = [];\r\n\r\n  //Ingreedients Table\r\n\r\n  for (const key in ingredients) {\r\n    ingrTable.push(\r\n      <tr key={key}>\r\n        <td>{key}</td>{' '}\r\n        <td className='text-muted ms-auto'>{ingredients[key]} / 100 g</td>\r\n      </tr>\r\n    );\r\n  }\r\n\r\n  //EXP Date Parsing method\r\n\r\n  return (\r\n    <>\r\n      <Link className='btn btn-light my-3' to='/'>\r\n        Return\r\n      </Link>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <div>\r\n          <Row>\r\n            <Col md={5} className='ms-auto'>\r\n              <Image src={product.image} alt={product.name} fluid></Image>\r\n            </Col>\r\n            <Col className='ms-auto' md={5}>\r\n              <ListGroup variant='flush'>\r\n                <ListGroup.Item>\r\n                  <h3>{product.name}</h3>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Rating\r\n                    value={product.rating}\r\n                    text={`${product.numReviews} reviews`}\r\n                  />\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>Exp Date: {product.expDate}</ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Card>\r\n                    <ListGroup variant='flush'>\r\n                      <ListGroup.Item>\r\n                        <Row>\r\n                          <Col>Price:</Col>\r\n                          <Col>\r\n                            <strong>${product.price}</strong>\r\n                          </Col>\r\n                        </Row>\r\n                      </ListGroup.Item>\r\n\r\n                      <ListGroup.Item>\r\n                        <Row>\r\n                          <Col>Status:</Col>\r\n                          <Col>\r\n                            {product.countInStock > 0\r\n                              ? 'In Stock'\r\n                              : 'Out Of Stock'}\r\n                          </Col>\r\n                        </Row>\r\n                      </ListGroup.Item>\r\n\r\n                      {product.countInStock > 0 && (\r\n                        <ListGroup.Item>\r\n                          <Row>\r\n                            <Col>Qty</Col>\r\n                            <Col>\r\n                              <Form.Control\r\n                                as='select'\r\n                                value={qty}\r\n                                onChange={(e) => setQty(e.target.value)}\r\n                              >\r\n                                {[...Array(product.countInStock).keys()].map(\r\n                                  (x) => (\r\n                                    <option key={x + 1} value={x + 1}>\r\n                                      {x + 1}\r\n                                    </option>\r\n                                  )\r\n                                )}\r\n                              </Form.Control>\r\n                            </Col>\r\n                          </Row>\r\n                        </ListGroup.Item>\r\n                      )}\r\n\r\n                      <ListGroup.Item>\r\n                        <Button\r\n                          onClick={addToCartHandler}\r\n                          className='btn-block'\r\n                          type='button'\r\n                          disabled={product.countInStock === 0}\r\n                        >\r\n                          Add To Carte\r\n                        </Button>\r\n                      </ListGroup.Item>\r\n                    </ListGroup>\r\n                  </Card>\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n          </Row>\r\n          <Row className='mt-5'>\r\n            <Col md={8} className='me-auto'>\r\n              <ListGroup.Item>\r\n                {' '}\r\n                <h3 className='text-info'>Description :</h3>{' '}\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                Description: {product.description}\r\n              </ListGroup.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row className='mt-5'>\r\n            <Col md={8} className='me-auto'>\r\n              <ListGroup.Item>\r\n                {' '}\r\n                <h3 className='text-info'>Ingredients / Composition :</h3>{' '}\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <table className='table '>\r\n                  <thead>\r\n                    <tr>Valeurs nutritionnelles pour 100 g</tr>\r\n                  </thead>\r\n                  <tbody>{ingrTable}</tbody>\r\n                </table>\r\n              </ListGroup.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row className='mt-5'>\r\n            <Col md={8} className='me-auto'>\r\n              <ListGroup.Item>\r\n                {' '}\r\n                <h3 className='text-info'>Product features :</h3>{' '}\r\n                <h5 className='text-info'>Nutri-score</h5>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col md={8}>\r\n                    <div>\r\n                      <p>\r\n                        The Nutri-score allows you to identify the nutritional\r\n                        quality of the product at a glance. You can thus\r\n                        identify the products to favor and those to consume\r\n                        occasionally or in small quantities.\r\n                      </p>\r\n                    </div>\r\n                  </Col>\r\n                  <Col md={4}>\r\n                    <div className='mt-auto'>\r\n                      <img\r\n                        alt=''\r\n                        src={`/nutriscore/${product.nutriScore}.png`}\r\n                        width='100'\r\n                        height='40'\r\n                        className='d-inline-block align-top offset-md-3'\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n                <div>\r\n                  <p>\r\n                    To classify each product, research teams have developed a\r\n                    score that takes into account, for 100 grams of product, the\r\n                    content:\r\n                  </p>\r\n                </div>\r\n                <div>\r\n                  <ul>\r\n                    <li>\r\n                      <p>\r\n                        in nutrients and foods to promote: fiber, protein,\r\n                        fruits and vegetables\r\n                      </p>\r\n                    </li>\r\n                    <li>\r\n                      <p>\r\n                        in nutrients to limit: energy, saturated fatty acids,\r\n                        sugars, salt\r\n                      </p>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              </ListGroup.Item>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductScreen;\r\n","import axios from 'axios';\r\nimport {\r\n  CART_ADD_ITEM,\r\n  CART_REMOVE_ITEM,\r\n  CART_SAVE_SHIPPING_ADDRESS,\r\n  CART_SAVE_PAYMENT_METHOD,\r\n} from '../constants/cartConstants';\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n  const { data } = await axios.get(`/api/products/${id}`);\r\n\r\n  dispatch({\r\n    type: CART_ADD_ITEM,\r\n    payload: {\r\n      product: data._id,\r\n      name: data.name,\r\n      image: data.image,\r\n      price: data.price,\r\n      expDate:data.expDate,\r\n      isPromp:data.isPromp,\r\n      countInStock: data.countInStock,\r\n      qty,\r\n    },\r\n  });\r\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\r\n};\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n  dispatch({\r\n    type: CART_REMOVE_ITEM,\r\n    payload: id,\r\n  });\r\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\r\n};\r\n\r\nexport const saveShippingAdress = (data) => (dispatch) => {\r\n  dispatch({\r\n    type: CART_SAVE_SHIPPING_ADDRESS,\r\n    payload: data,\r\n  });\r\n  localStorage.setItem('shippingAddress', JSON.stringify(data));\r\n};\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n  dispatch({\r\n    type: CART_SAVE_PAYMENT_METHOD,\r\n    payload: data,\r\n  });\r\n  localStorage.setItem('paymentMethod', JSON.stringify(data));\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Image,\r\n  Form,\r\n  Button,\r\n  Card,\r\n} from 'react-bootstrap';\r\nimport Message from '../components/Message';\r\nimport { addToCart, removeFromCart } from '../actions/cartAction';\r\n\r\nconst CartScreen = ({ match, location, history }) => {\r\n  const productId = match.params.id;\r\n\r\n  const qty = location.search ? Number(location.search.split('=')[1]) : 1;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n  const { cartItems } = cart;\r\n\r\n  console.log(cartItems);\r\n\r\n  useEffect(() => {\r\n    if (productId) {\r\n      dispatch(addToCart(productId, qty));\r\n    }\r\n  }, [dispatch, productId, qty]);\r\n\r\n  const removeFromCartHandler = (id) => {\r\n    dispatch(removeFromCart(id));\r\n  };\r\n\r\n  const checkoutHandler = () => {\r\n    history.push('/login?redirect=shipping');\r\n  };\r\n  return (\r\n    <Row>\r\n      <Col md={8}>\r\n        <h1>Shopping Cart</h1>\r\n        {cartItems.length === 0 ? (\r\n          <Message>\r\n            Your cart is empty <Link to='/'>Go Back</Link>\r\n          </Message>\r\n        ) : (\r\n          <ListGroup variant='flush'>\r\n            {cartItems.map((item) => (\r\n              <ListGroup.Item key={item.product}>\r\n                <Row>\r\n                  <Col md={2}>\r\n                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                  </Col>\r\n                  <Col md={3}>\r\n                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                  </Col>\r\n                  <Col md={2}>${item.price}</Col>\r\n                  <Col md={2}>\r\n                    <Form.Control\r\n                      as='select'\r\n                      value={item.qty}\r\n                      onChange={(e) =>\r\n                        dispatch(\r\n                          addToCart(item.product, Number(e.target.value))\r\n                        )\r\n                      }\r\n                    >\r\n                      {[...Array(item.countInStock).keys()].map((x) => (\r\n                        <option key={x + 1} value={x + 1}>\r\n                          {x + 1}\r\n                        </option>\r\n                      ))}\r\n                    </Form.Control>\r\n                  </Col>\r\n                  <Col md={2}>\r\n                    <Button\r\n                      type='button'\r\n                      variant='light'\r\n                      onClick={() => removeFromCartHandler(item.product)}\r\n                    >\r\n                      <i className='fas fa-trash'></i>\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n            ))}\r\n          </ListGroup>\r\n        )}\r\n      </Col>\r\n      <Col md={4}>\r\n        <Card>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>\r\n                Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\r\n                items\r\n              </h2>\r\n              $\r\n              {cartItems\r\n                .reduce((acc, item) => acc + item.qty * item.price, 0)\r\n                .toFixed(2)}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <Button\r\n                type='button'\r\n                className='btn-block'\r\n                disabled={cartItems.length === 0}\r\n                onClick={checkoutHandler}\r\n              >\r\n                Proceed To Checkout\r\n              </Button>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default CartScreen;\r\n","import React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nconst FormContainer = ({ children }) => {\r\n  return (\r\n    <Container>\r\n      <Row className='justify-content-md-center'>\r\n        <Col xs={12} md={6}>\r\n          {children}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default FormContainer;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Button, Row, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { login } from '../actions/userActions';\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { loading, error, userInfo } = userLogin;\r\n\r\n  const redirect = location.search ? location.search.split('=')[1] : '/';\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect);\r\n    }\r\n  }, [history, userInfo, redirect]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(login(email, password));\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign In</h1>\r\n      {error && <Message variant='danger'>{error}</Message>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='email'>\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='Enter email'\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='password'>\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Enter password'\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button\r\n          type='submit'\r\n          variant='primary'\r\n          style={{\r\n            marginTop: '20px',\r\n            display: 'block',\r\n          }}\r\n        >\r\n          Sign In\r\n        </Button>\r\n      </Form>\r\n\r\n      <Row className='py-3'>\r\n        <Col>\r\n          New Customer?{' '}\r\n          <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n            Register\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n      <Row className='py-3'>\r\n        <Col>\r\n          Are a professional ?{' '}\r\n          <Link\r\n            to={redirect ? `/registerpro?redirect=${redirect}` : '/registerpro'}\r\n          >\r\n            Register\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default LoginScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Button, Row, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { registerUser } from '../actions/userActions';\r\n\r\nconst RegisterUserScreen = ({ location, history }) => {\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userRegister = useSelector((state) => state.userRegister);\r\n  const { loading, error, userInfo } = userRegister;\r\n\r\n  const redirect = location.search ? location.search.split('=')[1] : '/';\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect);\r\n    }\r\n  }, [history, userInfo, redirect]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setMessage('Passwords do not match');\r\n    } else {\r\n      dispatch(registerUser(name, email, password));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign Up</h1>\r\n      {message && <Message variant='danger'>{message}</Message>}\r\n      {error && <Message variant='danger'>{error}</Message>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='name'>\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control\r\n            type='name'\r\n            placeholder='Enter name'\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='email'>\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='Enter email'\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Row>\r\n          <Col>\r\n            <Form.Group controlId='password'>\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type='password'\r\n                placeholder='Enter password'\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n          </Col>\r\n\r\n          <Col>\r\n            <Form.Group controlId='confirmPassword'>\r\n              <Form.Label>Confirm Password</Form.Label>\r\n              <Form.Control\r\n                type='password'\r\n                placeholder='Confirm password'\r\n                value={confirmPassword}\r\n                onChange={(e) => setConfirmPassword(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Button\r\n          type='submit'\r\n          variant='primary'\r\n          style={{\r\n            marginTop: '20px',\r\n            display: 'block',\r\n          }}\r\n        >\r\n          Register\r\n        </Button>\r\n      </Form>\r\n\r\n      <Row className='py-3'>\r\n        <Col>\r\n          Have an Account?{' '}\r\n          <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n            Login\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default RegisterUserScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Button, Row, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { registerProd } from '../actions/userActions';\r\n\r\nconst RegisterProdScreen = ({ location, history }) => {\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [numSiret, setSiret] = useState('');\r\n  const [companyName, setCompanyName] = useState('');\r\n  const [address, setAddress] = useState('');\r\n  const [city, setCity] = useState('');\r\n  const [postalCode, setPostalCode] = useState('');\r\n  const [country, setCountry] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const companyAddress = {\r\n    address,\r\n    city,\r\n    postalCode,\r\n    country,\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const prodRegister = useSelector((state) => state.prodRegister);\r\n  const { loading, error, userInfo } = prodRegister;\r\n\r\n  const redirect = location.search ? location.search.split('=')[1] : '/';\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect);\r\n    }\r\n  }, [history, userInfo, redirect]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setMessage('Passwords do not match');\r\n    } else {\r\n      dispatch(\r\n        registerProd(\r\n          name,\r\n          email,\r\n          password,\r\n          companyName,\r\n          numSiret,\r\n          companyAddress\r\n        )\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign Up</h1>\r\n      {message && <Message variant='danger'>{message}</Message>}\r\n      {error && <Message variant='danger'>{error}</Message>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='name'>\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control\r\n            type='name'\r\n            placeholder='Enter name'\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='email'>\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='Enter email'\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Row>\r\n          <Col>\r\n            <Form.Group controlId='companyName'>\r\n              <Form.Label>Company Name</Form.Label>\r\n              <Form.Control\r\n                type='companyName'\r\n                placeholder='Enter Company Name'\r\n                value={companyName}\r\n                onChange={(e) => setCompanyName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n          </Col>\r\n          <Col>\r\n            <Form.Group controlId='numSiret'>\r\n              <Form.Label>Siret number</Form.Label>\r\n              <Form.Control\r\n                type='numSiret'\r\n                placeholder='Enter SIRET number'\r\n                value={numSiret}\r\n                onChange={(e) => setSiret(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Form.Group controlId='address'>\r\n          <Form.Label>Address</Form.Label>\r\n          <Form.Control\r\n            type='address'\r\n            placeholder='Enter Address'\r\n            value={address}\r\n            onChange={(e) => setAddress(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Row>\r\n          <Col>\r\n            <Form.Group controlId='city'>\r\n              <Form.Label>City</Form.Label>\r\n              <Form.Control\r\n                type='city'\r\n                placeholder='Enter city'\r\n                value={city}\r\n                onChange={(e) => setCity(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n          </Col>\r\n          <Col>\r\n            <Form.Group controlId='postalCode'>\r\n              <Form.Label>Postal Code</Form.Label>\r\n              <Form.Control\r\n                type='postalCode'\r\n                placeholder='Enter Postal Code'\r\n                value={postalCode}\r\n                onChange={(e) => setPostalCode(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n          </Col>\r\n          <Col>\r\n            <Form.Group controlId='country'>\r\n              <Form.Label>Country</Form.Label>\r\n              <Form.Control\r\n                type='country'\r\n                placeholder='Enter country'\r\n                value={country}\r\n                onChange={(e) => setCountry(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row>\r\n          <Col>\r\n            <Form.Group controlId='password'>\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type='password'\r\n                placeholder='Enter password'\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n          </Col>\r\n\r\n          <Col>\r\n            <Form.Group controlId='confirmPassword'>\r\n              <Form.Label>Confirm Password</Form.Label>\r\n              <Form.Control\r\n                type='password'\r\n                placeholder='Confirm password'\r\n                value={confirmPassword}\r\n                onChange={(e) => setConfirmPassword(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Button\r\n          type='submit'\r\n          variant='primary'\r\n          style={{\r\n            marginTop: '20px',\r\n            display: 'block',\r\n          }}\r\n        >\r\n          Register\r\n        </Button>\r\n      </Form>\r\n\r\n      <Row className='py-3'>\r\n        <Col>\r\n          Have an Account?{' '}\r\n          <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n            Login\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default RegisterProdScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Table, Form, Button, Row, Col } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport {\r\n  getUserDetails,\r\n  getProdDetails,\r\n  updateUserProfile,\r\n  updateProdProfile,\r\n} from '../actions/userActions';\r\n\r\nconst ProfileScreen = ({ location, history }) => {\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [numSiret, setSiret] = useState('');\r\n  const [companyName, setCompanyName] = useState('');\r\n  const [address, setAddress] = useState('');\r\n  const [city, setCity] = useState('');\r\n  const [postalCode, setPostalCode] = useState('');\r\n  const [country, setCountry] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const companyAddress = {\r\n    address,\r\n    city,\r\n    postalCode,\r\n    country,\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, error, user } = userDetails;\r\n\r\n  // const prodDetails = useSelector((state) => state.prodDetails);\r\n  // const { loading, error, prod } = prodDetails;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\r\n  const { success } = userUpdateProfile;\r\n  const prodUpdateProfile = useSelector((state) => state.prodUpdate);\r\n  const { successProd } = prodUpdateProfile;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login');\r\n    } else {\r\n      if (!user || !user.name) {\r\n        dispatch(getUserDetails('profile'));\r\n      } else {\r\n        setName(user.name);\r\n        setEmail(user.email);\r\n        setSiret(user.numSiret);\r\n        setCompanyName(user.companyName);\r\n        setAddress(user.companyAddress.address);\r\n        setCity(user.companyAddress.city);\r\n        setCountry(user.companyAddress.country);\r\n        setPostalCode(user.companyAddress.postalCode);\r\n      }\r\n    }\r\n  }, [dispatch, history, userInfo, user]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setMessage('Passwords do not match');\r\n    } else {\r\n      dispatch(\r\n        updateUserProfile({\r\n          id: user._id,\r\n          name,\r\n          email,\r\n          password,\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  const submitHandlerPro = (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setMessage('Passwords do not match');\r\n    } else {\r\n      dispatch(\r\n        updateProdProfile({\r\n          id: user._id,\r\n          name,\r\n          email,\r\n          password,\r\n          numSiret,\r\n          companyName,\r\n          companyAddress,\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={12}>\r\n        <h2>User Profile</h2>\r\n        {message && <Message variant='danger'>{message}</Message>}\r\n        {error && <Message variant='danger'>{error}</Message>}\r\n        {success && <Message variant='success'>Profile Updated</Message>}\r\n        {successProd && <Message variant='success'>Profile Updated</Message>}\r\n        {loading && <Loader />}\r\n\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant='danger'>{error}</Message>\r\n        ) : user.isProd ? (\r\n          <Form onSubmit={submitHandlerPro}>\r\n            <Form.Group controlId='name'>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='Enter name'\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='email'>\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type='email'\r\n                placeholder='Enter email'\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Row>\r\n              <Col>\r\n                <Form.Group controlId='companyName'>\r\n                  <Form.Label>Company Name</Form.Label>\r\n                  <Form.Control\r\n                    type='companyName'\r\n                    placeholder='Enter Company Name'\r\n                    value={companyName}\r\n                    onChange={(e) => setCompanyName(e.target.value)}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n              </Col>\r\n              <Col>\r\n                <Form.Group controlId='numSiret'>\r\n                  <Form.Label>Siret number</Form.Label>\r\n                  <Form.Control\r\n                    type='numSiret'\r\n                    placeholder='Enter SIRET number'\r\n                    value={numSiret}\r\n                    onChange={(e) => setSiret(e.target.value)}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n\r\n            <Form.Group controlId='address'>\r\n              <Form.Label>Address</Form.Label>\r\n              <Form.Control\r\n                type='address'\r\n                placeholder='Enter Address'\r\n                value={address}\r\n                onChange={(e) => setAddress(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Row>\r\n              <Col>\r\n                <Form.Group controlId='city'>\r\n                  <Form.Label>City</Form.Label>\r\n                  <Form.Control\r\n                    type='city'\r\n                    placeholder='Enter city'\r\n                    value={city}\r\n                    onChange={(e) => setCity(e.target.value)}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n              </Col>\r\n              <Col>\r\n                <Form.Group controlId='postalCode'>\r\n                  <Form.Label>Postal Code</Form.Label>\r\n                  <Form.Control\r\n                    type='postalCode'\r\n                    placeholder='Enter Postal Code'\r\n                    value={postalCode}\r\n                    onChange={(e) => setPostalCode(e.target.value)}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n              </Col>\r\n              <Col>\r\n                <Form.Group controlId='country'>\r\n                  <Form.Label>Country</Form.Label>\r\n                  <Form.Control\r\n                    type='country'\r\n                    placeholder='Enter country'\r\n                    value={country}\r\n                    onChange={(e) => setCountry(e.target.value)}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n              <Col>\r\n                <Form.Group controlId='password'>\r\n                  <Form.Label>Password</Form.Label>\r\n                  <Form.Control\r\n                    type='password'\r\n                    placeholder='Enter password'\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n              </Col>\r\n\r\n              <Col>\r\n                <Form.Group controlId='confirmPassword'>\r\n                  <Form.Label>Confirm Password</Form.Label>\r\n                  <Form.Control\r\n                    type='password'\r\n                    placeholder='Confirm password'\r\n                    value={confirmPassword}\r\n                    onChange={(e) => setConfirmPassword(e.target.value)}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n\r\n            <Button\r\n              type='submit'\r\n              variant='primary'\r\n              style={{\r\n                marginTop: '20px',\r\n                display: 'block',\r\n              }}\r\n            >\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='name'>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='Enter name'\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='email'>\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type='email'\r\n                placeholder='Enter email'\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='password'>\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type='password'\r\n                placeholder='Enter password'\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='confirmPassword'>\r\n              <Form.Label>Confirm Password</Form.Label>\r\n              <Form.Control\r\n                type='password'\r\n                placeholder='Confirm password'\r\n                value={confirmPassword}\r\n                onChange={(e) => setConfirmPassword(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button\r\n              type='submit'\r\n              variant='primary'\r\n              style={{\r\n                marginTop: '20px',\r\n                display: 'block',\r\n              }}\r\n            >\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default ProfileScreen;\r\n","import React from 'react';\r\nimport { Nav } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\n\r\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\r\n  return (\r\n    <Nav className='justify-content-center mb-4'>\r\n      <Nav.Item>\r\n        {step1 ? (\r\n          <LinkContainer to='/login'>\r\n            <Nav.Link>Sign In</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Sign In</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n      <Nav.Item>\r\n        {step2 ? (\r\n          <LinkContainer to='/shipping'>\r\n            <Nav.Link>Shipping</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Shipping</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n      <Nav.Item>\r\n        {step3 ? (\r\n          <LinkContainer to='/payment'>\r\n            <Nav.Link>Payment</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Payment</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n      <Nav.Item>\r\n        {step4 ? (\r\n          <LinkContainer to='/placeorder'>\r\n            <Nav.Link>Place Order</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Place Order</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n    </Nav>\r\n  );\r\n};\r\n\r\nexport default CheckoutSteps;\r\n","import React, { useState } from 'react';\r\nimport { Form, Button, Row, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport FormContainer from '../components/FormContainer';\r\nimport ChekoutSteps from '../components/CheckoutSteps';\r\nimport { saveShippingAdress } from '../actions/cartAction';\r\n\r\nconst ShipingScreen = ({ history }) => {\r\n  const cart = useSelector((state) => state.cart);\r\n  const { shippingAdress } = cart;\r\n\r\n  const [address, setAddress] = useState(shippingAdress.address);\r\n  const [city, setCity] = useState(shippingAdress.city);\r\n  const [postalCode, setPostalCode] = useState(shippingAdress.postalCode);\r\n  const [country, setCountry] = useState(shippingAdress.country);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch(\r\n      saveShippingAdress({\r\n        address,\r\n        city,\r\n        postalCode,\r\n        country,\r\n      })\r\n    );\r\n    history.push('/payment');\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <ChekoutSteps step1 step2 />\r\n\r\n      <h1>Shipping</h1>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='address'>\r\n          <Form.Label>Address</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter address'\r\n            value={address}\r\n            required\r\n            onChange={(e) => setAddress(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='city'>\r\n          <Form.Label>City</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter City'\r\n            value={city}\r\n            required\r\n            onChange={(e) => setCity(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='postalCode'>\r\n          <Form.Label>PostalCode</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter Postal Code'\r\n            value={postalCode}\r\n            required\r\n            onChange={(e) => setPostalCode(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='country'>\r\n          <Form.Label>Country</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter Country'\r\n            value={country}\r\n            required\r\n            onChange={(e) => setCountry(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button\r\n          type='submit'\r\n          variant='primary'\r\n          style={{\r\n            marginTop: '20px',\r\n            display: 'block',\r\n          }}\r\n        >\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default ShipingScreen;\r\n","import React, { useState } from 'react';\r\nimport { Form, Button, Row, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport FormContainer from '../components/FormContainer';\r\nimport ChekoutSteps from '../components/CheckoutSteps';\r\nimport { savePaymentMethod } from '../actions/cartAction';\r\n\r\nconst PayementScreen = ({ history }) => {\r\n  const cart = useSelector((state) => state.cart);\r\n  const { shippingAdress } = cart;\r\n\r\n  if (!shippingAdress) {\r\n    history.push('/shipping');\r\n  }\r\n\r\n  const [paymentMethod, setPaymentMethod] = useState('PayPal');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch(\r\n      savePaymentMethod({\r\n        paymentMethod,\r\n      })\r\n    );\r\n    history.push('/placeorder');\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <ChekoutSteps step1 step2 step3 />\r\n\r\n      <h1>Payment Method</h1>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group>\r\n          <Form.Label as='legend'>Select Method</Form.Label>\r\n          <Col>\r\n            <Form.Check\r\n              type='radio'\r\n              label='PayPal or Credit Card'\r\n              id='PayPal'\r\n              name='paymentMethod'\r\n              value='PayPal'\r\n              checked\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            ></Form.Check>\r\n            <Form.Check\r\n              type='radio'\r\n              label='Strip'\r\n              id='Strip'\r\n              name='paymentMethod'\r\n              value='Stripe'\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            ></Form.Check>\r\n          </Col>\r\n        </Form.Group>\r\n        <Button\r\n          type='submit'\r\n          variant='primary'\r\n          style={{\r\n            marginTop: '20px',\r\n            display: 'block',\r\n          }}\r\n        >\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default PayementScreen;\r\n","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\nimport { createOrder } from '../actions/orderActions';\r\n// import { ORDER_CREATE_RESET } from '../constants/orderConstants';\r\n// import { USER_DETAILS_RESET } from '../constants/userConstants';\r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n\r\n  if (!cart.shippingAdress.address) {\r\n    history.push('/shipping');\r\n  } else if (!cart.paymentMethod) {\r\n    history.push('/payment');\r\n  }\r\n  //   Calculate prices\r\n  const addDecimals = (num) => {\r\n    return (Math.round(num * 100) / 100).toFixed(2);\r\n  };\r\n\r\n  cart.itemsPrice = addDecimals(\r\n    cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n  );\r\n  cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100);\r\n  cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)));\r\n  cart.totalPrice = (\r\n    Number(cart.itemsPrice) +\r\n    Number(cart.shippingPrice) +\r\n    Number(cart.taxPrice)\r\n  ).toFixed(2);\r\n\r\n  const orderCreate = useSelector((state) => state.orderCreate);\r\n  const { order, success, error } = orderCreate;\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      history.push(`/order/${order._id}`);\r\n      // dispatch({ type: USER_DETAILS_RESET });\r\n      // dispatch({ type: ORDER_CREATE_RESET });\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [history, success]);\r\n  console.log(cart.cartItems)\r\n\r\n  const placeOrderHandler = () => {\r\n    dispatch(\r\n      createOrder({\r\n        orderItems: cart.cartItems,\r\n        shippingAddress: cart.shippingAdress,\r\n        paymentMethod: cart.paymentMethod.paymentMethod,\r\n        itemsPrice: cart.itemsPrice,\r\n        shippingPrice: cart.shippingPrice,\r\n        taxPrice: cart.taxPrice,\r\n        totalPrice: cart.totalPrice,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CheckoutSteps step1 step2 step3 step4 />\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Address:</strong>\r\n                {cart.shippingAdress.address}, {cart.shippingAdress.city}{' '}\r\n                {cart.shippingAdress.postalCode}, {cart.shippingAdress.country}\r\n              </p>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <strong>Method: </strong>\r\n              {cart.paymentMethod.paymentMethod}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {cart.cartItems.length === 0 ? (\r\n                <Message>Your cart is empty</Message>\r\n              ) : (\r\n                <ListGroup variant='flush'>\r\n                  {cart.cartItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${cart.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${cart.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${cart.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${cart.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Button\r\n                  type='button'\r\n                  className='btn-block'\r\n                  disabled={cart.cartItems === 0}\r\n                  onClick={placeOrderHandler}\r\n                >\r\n                  Place Order\r\n                </Button>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PlaceOrderScreen;\r\n","import axios from 'axios';\r\nimport {\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_PAY_FAIL,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_LIST_MY_REQUEST,\r\n  ORDER_LIST_MY_SUCCESS,\r\n  ORDER_LIST_MY_FAIL,\r\n  ORDER_ITEMS_LIST_REQUEST,\r\n  ORDER_ITEMS_LIST_SUCCESS,\r\n  ORDER_ITEMSLIST_FAIL,\r\n  ORDER_ITEMSLIST_RESET,\r\n  ORDER_LIST_FAIL,\r\n  ORDER_LIST_SUCCESS,\r\n  ORDER_LIST_REQUEST,\r\n  ORDER_DELIVER_FAIL,\r\n  ORDER_DELIVER_SUCCESS,\r\n  ORDER_DELIVER_REQUEST,\r\n} from '../constants/orderConstants';\r\nimport { logout } from './userActions';\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_CREATE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(`/api/orders`, order, config);\r\n\r\n    dispatch({\r\n      type: ORDER_CREATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n\r\n    dispatch({\r\n      type: ORDER_CREATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_DETAILS_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/orders/${id}`, config);\r\n\r\n    dispatch({\r\n      type: ORDER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: ORDER_DETAILS_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const payOrder =\r\n  (orderId, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: ORDER_PAY_REQUEST,\r\n      });\r\n\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.put(\r\n        `/api/orders/${orderId}/pay`,\r\n        paymentResult,\r\n        config\r\n      );\r\n\r\n      dispatch({\r\n        type: ORDER_PAY_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message;\r\n      if (message === 'Not authorized, token failed') {\r\n        dispatch(logout());\r\n      }\r\n      dispatch({\r\n        type: ORDER_PAY_FAIL,\r\n        payload: message,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_LIST_MY_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/orders/myorders`, config);\r\n\r\n    dispatch({\r\n      type: ORDER_LIST_MY_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: ORDER_LIST_MY_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listMyOrdersItems = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_ITEMS_LIST_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/orders/myorders/items`, config);\r\n\r\n    dispatch({\r\n      type: ORDER_ITEMS_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: ORDER_ITEMSLIST_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_LIST_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/orders`, config);\r\n\r\n    dispatch({\r\n      type: ORDER_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: ORDER_LIST_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport {\r\n  getOrderDetails,\r\n  payOrder,\r\n} from '../actions/orderActions'\r\nimport {\r\n  ORDER_PAY_RESET,\r\n  ORDER_DELIVER_RESET,\r\n} from '../constants/orderConstants'\r\n\r\nconst OrderScreen = ({ match, history }) => {\r\n  const orderId = match.params.id\r\n\r\n  const [sdkReady, setSdkReady] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails)\r\n  const { order, loading, error } = orderDetails\r\n\r\n  const orderPay = useSelector((state) => state.orderPay)\r\n  const { loading: loadingPay, success: successPay } = orderPay\r\n\r\n//   const orderDeliver = useSelector((state) => state.orderDeliver)\r\n//    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  if (!loading) {\r\n    //   Calculate prices\r\n    const addDecimals = (num) => {\r\n      return (Math.round(num * 100) / 100).toFixed(2)\r\n    }\r\n\r\n    order.itemsPrice = addDecimals(\r\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n    )\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login')\r\n    }\r\n\r\n    const addPayPalScript = async () => {\r\n      const { data: clientId } = await axios.get('/api/config/paypal')\r\n      const script = document.createElement('script')\r\n      script.type = 'text/javascript'\r\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\r\n      script.async = true\r\n      script.onload = () => {\r\n        setSdkReady(true)\r\n      }\r\n      document.body.appendChild(script)\r\n    }\r\n\r\n    if (!order || successPay  || order._id !== orderId) {\r\n      dispatch({ type: ORDER_PAY_RESET })\r\n      dispatch(getOrderDetails(orderId))\r\n    } else if (!order.isPaid) {\r\n      if (!window.paypal) {\r\n        addPayPalScript()\r\n      } else {\r\n        setSdkReady(true)\r\n      }\r\n    }\r\n  }, [dispatch, orderId, successPay, order])\r\n\r\n  const successPaymentHandler = (paymentResult) => {\r\n    console.log(paymentResult)\r\n    dispatch(payOrder(orderId, paymentResult))\r\n  }\r\n  const deliverHandler = () => {\r\n    //dispatch(deliverOrder(order))\r\n  }\r\n\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant='danger'>{error}</Message>\r\n  ) : (\r\n    <>\r\n      <h1>Order {order._id}</h1>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Name: </strong> {order.user.name}\r\n              </p>\r\n              <p>\r\n                <strong>Email: </strong>{' '}\r\n                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n              </p>\r\n              <p>\r\n                <strong>Address:</strong>\r\n                {order.shippingAddress.address}, {order.shippingAddress.city}{' '}\r\n                {order.shippingAddress.postalCode},{' '}\r\n                {order.shippingAddress.country}\r\n              </p>\r\n              {order.isDelivered ? (\r\n                <Message variant='success'>\r\n                  Delivered on {order.deliveredAt}\r\n                </Message>\r\n              ) : (\r\n                <Message variant='danger'>Not Delivered</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <p>\r\n                <strong>Method: </strong>\r\n                {order.paymentMethod}\r\n              </p>\r\n              {order.isPaid ? (\r\n                <Message variant='success'>Paid on {order.paidAt}</Message>\r\n              ) : (\r\n                <Message variant='danger'>Not Paid</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {order.orderItems.length === 0 ? (\r\n                <Message>Order is empty</Message>\r\n              ) : (\r\n                <ListGroup variant='flush'>\r\n                  {order.orderItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${order.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${order.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${order.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${order.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              {!order.isPaid && (\r\n                <ListGroup.Item>\r\n                  {loadingPay && <Loader />}\r\n                  {!sdkReady ? (\r\n                    <Loader />\r\n                  ) : (\r\n                    <PayPalButton\r\n                      amount={order.totalPrice}\r\n                      onSuccess={successPaymentHandler}\r\n                    />\r\n                  )}\r\n                </ListGroup.Item>\r\n              )}\r\n \r\n              {userInfo &&\r\n                userInfo.isAdmin &&\r\n                order.isPaid &&\r\n                !order.isDelivered && (\r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      type='button'\r\n                      className='btn btn-block'\r\n                      onClick={deliverHandler}\r\n                    >\r\n                      Mark As Delivered\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                )}\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default OrderScreen\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Table, Form, Image, Button, Row, Col } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport { getUserDetails } from '../actions/userActions';\r\nimport Moment from 'moment';\r\n\r\nimport { listMyOrders, listMyOrdersItems } from '../actions/orderActions';\r\n\r\nconst FridgeScreen = ({ location, history }) => {\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, error, user } = userDetails;\r\n\r\n  const orderItems = useSelector((state) => state.orderItems);\r\n  const {\r\n    loading: loadingOrderItems,\r\n    error: errorOrderItems,\r\n    ordersItems,\r\n  } = orderItems;\r\n\r\n  const dateNow = new Date();\r\n\r\n  // const prodDetails = useSelector((state) => state.prodDetails);\r\n  // const { loading, error, prod } = prodDetails;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const orderListMy = useSelector((state) => state.orderListMy);\r\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login');\r\n    } else {\r\n      if (!user || !user.name) {\r\n        dispatch(getUserDetails('profile'));\r\n        dispatch(listMyOrders());\r\n        dispatch(listMyOrdersItems());\r\n      }\r\n    }\r\n  }, [dispatch, history, userInfo, user]);\r\n\r\n  return (\r\n    <div>\r\n      {message && <Message variant='danger'>{message}</Message>}\r\n      {error && <Message variant='danger'>{error}</Message>}\r\n      {loading && <Loader />}\r\n      <Row>\r\n        <Col md={12}>\r\n          <h2>My Orders</h2>\r\n          {loading ? (\r\n            <Loader />\r\n          ) : error ? (\r\n            <Message variant='danger'>{error}</Message>\r\n          ) : (\r\n            <Row>\r\n              <Col md={12}>\r\n                {loadingOrders ? (\r\n                  <Loader />\r\n                ) : errorOrders ? (\r\n                  <Message variant='danger'>{errorOrders}</Message>\r\n                ) : (\r\n                  <Table\r\n                    striped\r\n                    bordered\r\n                    hover\r\n                    responsive\r\n                    calssName='table-sm'\r\n                    variant='dark'\r\n                  >\r\n                    <thead>\r\n                      <tr>\r\n                        <th>ID</th>\r\n                        <th>DATE</th>\r\n                        <th>TOTAL</th>\r\n                        <th>PAID</th>\r\n                        <th>DELIVERD</th>\r\n                        <th>INFO</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {orders.map((order) => (\r\n                        <tr key={order._id}>\r\n                          <td>{order._id}</td>\r\n                          <td>{order.createdAt.substring(0, 10)}</td>\r\n                          <td>{order.totalPrice}</td>\r\n                          <td>\r\n                            {order.isPaid ? (\r\n                              order.paidAt.substring(0, 100)\r\n                            ) : (\r\n                              <i\r\n                                className='fas fa-times'\r\n                                style={{ color: 'red' }}\r\n                              ></i>\r\n                            )}\r\n                          </td>\r\n                          <td>\r\n                            {order.isDelivered ? (\r\n                              order.deliveredAtAt.substring(0, 100)\r\n                            ) : (\r\n                              <i\r\n                                className='fas fa-times'\r\n                                style={{ color: 'red' }}\r\n                              ></i>\r\n                            )}\r\n                          </td>\r\n                          <td>\r\n                            <LinkContainer to={`/order/${order._id}`}>\r\n                              <Button className='btn-sm' variant='light'>\r\n                                Details\r\n                              </Button>\r\n                            </LinkContainer>\r\n                          </td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </Table>\r\n                )}\r\n              </Col>\r\n            </Row>\r\n          )}\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row>\r\n        <Col md={12}>\r\n          <h2>My Fridge</h2>\r\n          {loading ? (\r\n            <Loader />\r\n          ) : error ? (\r\n            <Message variant='danger'>{error}</Message>\r\n          ) : (\r\n            <div>\r\n              <Row>\r\n                <Col md={6}>\r\n                  {loadingOrderItems ? (\r\n                    <Loader />\r\n                  ) : errorOrderItems ? (\r\n                    <Message variant='danger'>{errorOrderItems}</Message>\r\n                  ) : (\r\n                    <Table\r\n                      striped\r\n                      bordered\r\n                      hover\r\n                      responsive\r\n                      calssName='table-sm'\r\n                    >\r\n                      <thead>\r\n                        <tr className='table-success'>\r\n                          <th colspan='3' className='text-center'>\r\n                            Not expierd\r\n                          </th>\r\n                        </tr>\r\n                        <tr className='table-success'>\r\n                          <th>PRODUCT</th>\r\n                          <th>EXPERATION DATE</th>\r\n                          <th>DETAILS</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {ordersItems.map((orderItem) =>\r\n                          orderItem.isPromp &&\r\n                          Moment(orderItem.expDate).diff(dateNow, 'days') >\r\n                            30 ? (\r\n                            <tr key={orderItem._id} className='table-success'>\r\n                              <td>\r\n                                <Image\r\n                                  style={{ height: '30px' }}\r\n                                  src={orderItem.image}\r\n                                  alt={orderItem.name}\r\n                                  fluid\r\n                                  rounded\r\n                                />{' '}\r\n                                {orderItem.name}\r\n                              </td>\r\n                              <td>{orderItem.expDate.substring(0, 10)}</td>\r\n                              <td>\r\n                                <LinkContainer\r\n                                  to={`/product/${orderItem.product}`}\r\n                                >\r\n                                  <Button className='btn-sm' variant='light'>\r\n                                    Details\r\n                                  </Button>\r\n                                </LinkContainer>\r\n                              </td>\r\n                            </tr>\r\n                          ) : (\r\n                            <></>\r\n                          )\r\n                        )}\r\n                      </tbody>\r\n                    </Table>\r\n                  )}\r\n                </Col>\r\n                <Col md={6}>\r\n                  {loadingOrderItems ? (\r\n                    <Loader />\r\n                  ) : errorOrderItems ? (\r\n                    <Message variant='danger'>{errorOrderItems}</Message>\r\n                  ) : (\r\n                    <Table\r\n                      striped\r\n                      bordered\r\n                      hover\r\n                      responsive\r\n                      calssName='table-sm'\r\n                      style={{ backgroundColor: 'red' }}\r\n                    >\r\n                      <thead>\r\n                        <tr className='table-warning'>\r\n                          <th colspan='3' className='text-center'>\r\n                            Nearly Expierd\r\n                          </th>\r\n                        </tr>\r\n                        <tr className='table-warning'>\r\n                          <th>PRODUCT</th>\r\n                          <th>EXPERATION DATE</th>\r\n                          <th>DETAILS</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {ordersItems.map((orderItem) =>\r\n                          orderItem.isPromp &&\r\n                          Moment(orderItem.expDate).diff(dateNow, 'days') > 1 &&\r\n                          Moment(orderItem.expDate).diff(dateNow, 'days') <\r\n                            7 ? (\r\n                            <tr key={orderItem._id} className='table-warning'>\r\n                              <td>\r\n                                <Image\r\n                                  style={{ height: '30px' }}\r\n                                  src={orderItem.image}\r\n                                  alt={orderItem.name}\r\n                                  fluid\r\n                                  rounded\r\n                                />{' '}\r\n                                {orderItem.name}\r\n                              </td>\r\n                              <td>{orderItem.expDate.substring(0, 10)}</td>\r\n                              <td>\r\n                                <LinkContainer\r\n                                  to={`/product/${orderItem.product}`}\r\n                                >\r\n                                  <Button className='btn-sm' variant='light'>\r\n                                    Details\r\n                                  </Button>\r\n                                </LinkContainer>\r\n                              </td>\r\n                            </tr>\r\n                          ) : (\r\n                            <></>\r\n                          )\r\n                        )}\r\n                      </tbody>\r\n                    </Table>\r\n                  )}\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col md={6}>\r\n                  {loadingOrderItems ? (\r\n                    <Loader />\r\n                  ) : errorOrderItems ? (\r\n                    <Message variant='danger'>{errorOrderItems}</Message>\r\n                  ) : (\r\n                    <Table\r\n                      striped\r\n                      bordered\r\n                      hover\r\n                      responsive\r\n                      calssName='table-sm'\r\n                    >\r\n                      <thead>\r\n                        <tr className='table-danger'>\r\n                          <th colspan='3' className='text-center'>\r\n                            Expierd \"(It can be consumed)\"\r\n                          </th>\r\n                        </tr>\r\n                        <tr className='table-danger'>\r\n                          <th>PRODUCT</th>\r\n                          <th>EXPERATION DATE</th>\r\n                          <th>DETAILS</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {ordersItems.map((orderItem) =>\r\n                          orderItem.isPromp &&\r\n                          Moment(orderItem.expDate).diff(dateNow, 'days') >=\r\n                            -7 &&\r\n                          Moment(orderItem.expDate).diff(dateNow, 'days') <=\r\n                            0 ? (\r\n                            <tr key={orderItem._id} className='table-danger'>\r\n                              <td>\r\n                                <Image\r\n                                  style={{ height: '30px' }}\r\n                                  src={orderItem.image}\r\n                                  alt={orderItem.name}\r\n                                  fluid\r\n                                  rounded\r\n                                />{' '}\r\n                                {orderItem.name}\r\n                              </td>\r\n                              <td>{orderItem.expDate.substring(0, 10)}</td>\r\n                              <td>\r\n                                <LinkContainer\r\n                                  to={`/product/${orderItem.product}`}\r\n                                >\r\n                                  <Button className='btn-sm' variant='light'>\r\n                                    Details\r\n                                  </Button>\r\n                                </LinkContainer>\r\n                              </td>\r\n                            </tr>\r\n                          ) : (\r\n                            <></>\r\n                          )\r\n                        )}\r\n                      </tbody>\r\n                    </Table>\r\n                  )}\r\n                </Col>\r\n                <Col md={6}>\r\n                  {loadingOrderItems ? (\r\n                    <Loader />\r\n                  ) : errorOrderItems ? (\r\n                    <Message variant='danger'>{errorOrderItems}</Message>\r\n                  ) : (\r\n                    <Table\r\n                      striped\r\n                      bordered\r\n                      hover\r\n                      responsive\r\n                      calssName='table-sm'\r\n                    >\r\n                      <thead>\r\n                        <tr className='table-primary'>\r\n                          <th colspan='3' className='text-center'>\r\n                            Expierd \"(Do not consume)\"\r\n                          </th>\r\n                        </tr>\r\n                        <tr className='table-primary'>\r\n                          <th>PRODUCT</th>\r\n                          <th>EXPERATION DATE</th>\r\n                          <th>DETAILS</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {ordersItems.map((orderItem) =>\r\n                          orderItem.isPromp &&\r\n                          Moment(orderItem.expDate).diff(dateNow, 'days') <=\r\n                            -7 ? (\r\n                            <tr key={orderItem._id} className='table-primary'>\r\n                              <td>\r\n                                <Image\r\n                                  style={{ height: '30px' }}\r\n                                  src={orderItem.image}\r\n                                  alt={orderItem.name}\r\n                                  fluid\r\n                                  rounded\r\n                                />\r\n                                {orderItem.name}\r\n                              </td>\r\n                              <td>{orderItem.expDate.substring(0, 10)}</td>\r\n                              <td>\r\n                                <LinkContainer\r\n                                  to={`/product/${orderItem.product}`}\r\n                                >\r\n                                  <Button className='btn-sm' variant='light'>\r\n                                    Details\r\n                                  </Button>\r\n                                </LinkContainer>\r\n                              </td>\r\n                            </tr>\r\n                          ) : (\r\n                            <></>\r\n                          )\r\n                        )}\r\n                      </tbody>\r\n                    </Table>\r\n                  )}\r\n                </Col>\r\n              </Row>\r\n            </div>\r\n          )}\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FridgeScreen;\r\n","import React, { useEffect } from 'react';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Table, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport { listUsers, deleteUser } from '../actions/userActions';\r\n\r\nconst UserListScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const userList = useSelector((state) => state.userList);\r\n  const { loading, error, users } = userList;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userDelete = useSelector((state) => state.userDelete);\r\n  const { success: successDelete } = userDelete;\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listUsers());\r\n    } else {\r\n      history.push('/login');\r\n    }\r\n  }, [dispatch, history, successDelete, userInfo]);\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm('Are you sure')) {\r\n      dispatch(deleteUser(id));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1>Users</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className='table-sm'>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>NAME</th>\r\n              <th>EMAIL</th>\r\n              <th>ADMIN</th>\r\n              <th>DELETE</th>\r\n              <th>UPDATE</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {users.map((user) =>\r\n              !user.isProd ? (\r\n                <tr key={user._id}>\r\n                  <td>{user._id}</td>\r\n                  <td>{user.name}</td>\r\n                  <td>\r\n                    <a href={`mailto:${user.email}`}>{user.email}</a>\r\n                  </td>\r\n                  <td>\r\n                    {user.isAdmin ? (\r\n                      <i\r\n                        className='fas fa-check'\r\n                        style={{ color: 'green' }}\r\n                      ></i>\r\n                    ) : (\r\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td className='text-center'>\r\n                    <Button\r\n                      variant='danger'\r\n                      className='btn-sm'\r\n                      onClick={() => deleteHandler(user._id)}\r\n                    >\r\n                      <i className='fas fa-trash'></i>\r\n                    </Button>\r\n                  </td>\r\n                  <td className='text-center'>\r\n                    <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                      <Button variant='light' className='btn-sm'>\r\n                        <i className='fas fa-edit'></i>\r\n                      </Button>\r\n                    </LinkContainer>\r\n                  </td>\r\n                </tr>\r\n              ) : (\r\n                <></>\r\n              )\r\n            )}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n      <h1>Producers</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <Table\r\n          striped\r\n          bordered\r\n          hover\r\n          responsive\r\n          calssName='table-sm'\r\n          variant='dark'\r\n        >\r\n          <thead>\r\n            <tr>\r\n              <th>COMPANY NAME</th>\r\n              <th>NAME</th>\r\n              <th>EMAIL</th>\r\n              <th>CITY</th>\r\n              <th>DELETE</th>\r\n              <th>UPDATE</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {users.map((user) =>\r\n              user.isProd ? (\r\n                <tr key={user._id}>\r\n                  <td>{user.companyName}</td>\r\n                  <td>{user.name}</td>\r\n                  <td>\r\n                    <a href={`mailto:${user.email}`}>{user.email}</a>\r\n                  </td>\r\n                  <td>{user.companyAddress.city}</td>\r\n                  <td className='text-center'>\r\n                    <Button\r\n                      variant='danger'\r\n                      className='btn-sm'\r\n                      onClick={() => deleteHandler(user._id)}\r\n                    >\r\n                      <i className='fas fa-trash'></i>\r\n                    </Button>\r\n                  </td>\r\n                  <td className='text-center'>\r\n                    <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                      <Button variant='light' className='btn-sm'>\r\n                        <i className='fas fa-edit'></i>\r\n                      </Button>\r\n                    </LinkContainer>\r\n                  </td>\r\n                </tr>\r\n              ) : (\r\n                <></>\r\n              )\r\n            )}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserListScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { getUserDetails, updateUser } from '../actions/userActions';\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants';\r\n\r\nconst UserEditScreen = ({ match, history }) => {\r\n  const userId = match.params.id;\r\n\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, error, user } = userDetails;\r\n\r\n  const userUpdate = useSelector((state) => state.userUpdate);\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = userUpdate;\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: USER_UPDATE_RESET });\r\n      history.push('/admin/userlist');\r\n    } else {\r\n      if (!user.name || user._id !== userId) {\r\n        dispatch(getUserDetails(userId));\r\n      } else {\r\n        setName(user.name);\r\n        setEmail(user.email);\r\n        setIsAdmin(user.isAdmin);\r\n      }\r\n    }\r\n  }, [dispatch, history, userId, user, successUpdate]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(updateUser({ _id: userId, name, email, isAdmin }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Link to='/admin/userlist' className='btn btn-light my-3'>\r\n        Go Back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Edit User</h1>\r\n        {successUpdate && <Message variant='success'>Profile Updated</Message>}\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant='danger'>{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='name'>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='Enter name'\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='email'>\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type='email'\r\n                placeholder='Enter email'\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='isadmin'>\r\n              <Form.Check\r\n                type='checkbox'\r\n                label='Is Admin'\r\n                checked={isAdmin}\r\n                onChange={(e) => setIsAdmin(e.target.checked)}\r\n              ></Form.Check>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserEditScreen;\r\n","import React, { useEffect } from 'react';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Table, Button, Row, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\n// import Paginate from '../components/Paginate';\r\nimport {\r\n  listProducts,\r\n  deleteProduct,\r\n  createProduct,\r\n} from '../actions/productActions';\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants';\r\n\r\nconst ProductListScreen = ({ history, match }) => {\r\n  //   const pageNumber = match.params.pageNumber || 1;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const productList = useSelector((state) => state.productList);\r\n  const { loading, error, products } = productList;\r\n\r\n  const productDelete = useSelector((state) => state.productDelete);\r\n  const {\r\n    loading: loadingDelete,\r\n    error: errorDelete,\r\n    success: successDelete,\r\n  } = productDelete;\r\n\r\n  const productCreate = useSelector((state) => state.productCreate);\r\n  const {\r\n    loading: loadingCreate,\r\n    error: errorCreate,\r\n    success: successCreate,\r\n    product: createdProduct,\r\n  } = productCreate;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: PRODUCT_CREATE_RESET });\r\n\r\n    if (!userInfo || !userInfo.isAdmin) {\r\n      history.push('/login');\r\n    }\r\n\r\n    if (successCreate) {\r\n      history.push(`/admin/product/${createdProduct._id}/edit`);\r\n    } else {\r\n      dispatch(listProducts());\r\n    }\r\n  }, [\r\n    dispatch,\r\n    history,\r\n    userInfo,\r\n    successDelete,\r\n    successCreate,\r\n    createdProduct,\r\n  ]);\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm('Are you sure')) {\r\n      dispatch(deleteProduct(id));\r\n    }\r\n  };\r\n\r\n  const createProductHandler = () => {\r\n    dispatch(createProduct());\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row className='align-items-center'>\r\n        <Col>\r\n          <h1>Products</h1>\r\n        </Col>\r\n        <Col>\r\n          <Button\r\n            className='my-3'\r\n            onClick={createProductHandler}\r\n            style={{\r\n              float: 'right',\r\n            }}\r\n          >\r\n            <i className='fas fa-plus'></i> Create Product\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      {loadingDelete && <Loader />}\r\n      {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n      {loadingCreate && <Loader />}\r\n      {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Table striped bordered hover responsive className='table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>NAME</th>\r\n                <th>PRICE</th>\r\n                <th>CATEGORY</th>\r\n                <th>BRAND</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {products.map((product) => (\r\n                <tr key={product._id}>\r\n                  <td>{product._id}</td>\r\n                  <td>{product.name}</td>\r\n                  <td>${product.price}</td>\r\n                  <td>{product.category}</td>\r\n                  <td>{product.brand}</td>\r\n                  <td>\r\n                    <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                      <Button variant='light' className='btn-sm'>\r\n                        <i className='fas fa-edit'></i>\r\n                      </Button>\r\n                    </LinkContainer>\r\n                    <Button\r\n                      variant='danger'\r\n                      className='btn-sm text-center'\r\n                      onClick={() => deleteHandler(product._id)}\r\n                    >\r\n                      <i className='fas fa-trash'></i>\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n          {/* <Paginate pages={pages} page={page} isAdmin={true} /> */}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductListScreen;\r\n","import axios from 'axios';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Button, Row, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { listProductDetails, updateProduct } from '../actions/productActions';\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants';\r\n\r\nconst ProductEditScreen = ({ match, history }) => {\r\n  const productId = match.params.id;\r\n\r\n  const [name, setName] = useState('');\r\n  const [price, setPrice] = useState(0);\r\n  const [image, setImage] = useState('');\r\n  const [brand, setBrand] = useState('');\r\n  const [category, setCategory] = useState('');\r\n  const [countInStock, setCountInStock] = useState(0);\r\n  const [description, setDescription] = useState('');\r\n  const [uploading, setUploading] = useState(false);\r\n  //Compositon\r\n  const [energyKJ, setEnergyKj] = useState('');\r\n  const [energyKcal, setEnergyKcal] = useState('');\r\n  const [fat, setFat] = useState('');\r\n  const [acids, setAcids] = useState('');\r\n  const [carbohydrates, setCarbohydrates] = useState('');\r\n  const [sugars, setSugars] = useState('');\r\n  const [fiber, setFiber] = useState('');\r\n  const [protein, setProtein] = useState('');\r\n  const [salt, setSalt] = useState('');\r\n  //BarreCode\r\n  const [origCode, setOrigCode] = useState('');\r\n  const [fabCode, setFabCode] = useState('');\r\n  const [prodCode, setProdCode] = useState('');\r\n  const [contrCode, setContrCode] = useState('');\r\n\r\n  const [isPromp, setIsPromp] = useState(true);\r\n  const [nutriScore, setNutriScore] = useState('');\r\n  const [expDate, setExpDate] = useState('');\r\n  const [prodDate, setProdDate] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const { loading, error, product } = productDetails;\r\n\r\n  const productUpdate = useSelector((state) => state.productUpdate);\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = productUpdate;\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: PRODUCT_UPDATE_RESET });\r\n      history.push('/admin/productlist');\r\n    } else {\r\n      if (!product.name || product._id !== productId) {\r\n        dispatch(listProductDetails(productId));\r\n      } else {\r\n        setName(product.name);\r\n        setPrice(product.price);\r\n        setImage(product.image);\r\n        setBrand(product.brand);\r\n        setCategory(product.category);\r\n        setCountInStock(product.countInStock);\r\n        setDescription(product.description);\r\n        setOrigCode(product.barreCode.origCode);\r\n\r\n        setFabCode(product.barreCode.fabCode);\r\n        setProdCode(product.barreCode.prodCode);\r\n        setContrCode(product.barreCode.contrCode);\r\n\r\n        setIsPromp(product.isPromp);\r\n        setNutriScore(product.nutriScore);\r\n        setExpDate(product.expDate);\r\n        setProdDate(product.prodDate);\r\n\r\n        setEnergyKj(product.composition.EnergyKJ);\r\n        setEnergyKcal(product.composition.EnergyKcal);\r\n        setFat(product.composition.Fat);\r\n        setAcids(product.composition.Acids);\r\n        setCarbohydrates(product.composition.Carbohydrates);\r\n        setSugars(product.composition.Sugars);\r\n        setFiber(product.composition.Fiber);\r\n        setProtein(product.composition.Protein);\r\n        setSalt(product.composition.salt);\r\n      }\r\n    }\r\n  }, [dispatch, history, productId, product, successUpdate]);\r\n\r\n  const uploadFileHandler = async (e) => {\r\n    const file = e.target.files[0];\r\n    const formData = new FormData();\r\n    formData.append('image', file);\r\n    setUploading(true);\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post('/api/upload', formData, config);\r\n\r\n      setImage(data);\r\n      setUploading(false);\r\n    } catch (error) {\r\n      console.error(error);\r\n      setUploading(false);\r\n    }\r\n  };\r\n  const composition = {\r\n    EnergyKJ: energyKJ,\r\n    EnergyKcal: energyKcal,\r\n\r\n    Fat: fat,\r\n    Acids: acids,\r\n    Carbohydrates: carbohydrates,\r\n    Sugars: sugars,\r\n    Fiber: fiber,\r\n    Protein: protein,\r\n    salt,\r\n  };\r\n  const barreCode = {\r\n    origCode,\r\n    fabCode,\r\n    prodCode,\r\n    contrCode,\r\n  };\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      updateProduct({\r\n        _id: productId,\r\n        name,\r\n        price,\r\n        image,\r\n        brand,\r\n        category,\r\n        description,\r\n        countInStock,\r\n        expDate,\r\n        prodDate,\r\n        isPromp,\r\n        nutriScore,\r\n        composition,\r\n        barreCode,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Link to='/admin/productlist' className='btn btn-light my-3'>\r\n        Go Back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Edit Product</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant='danger'>{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='name'>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='Enter name'\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='price'>\r\n              <Form.Label>Price</Form.Label>\r\n              <Form.Control\r\n                type='number'\r\n                placeholder='Enter price'\r\n                value={price}\r\n                onChange={(e) => setPrice(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='image'>\r\n              <Form.Label>Image</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter image url'\r\n                value={image}\r\n                onChange={(e) => setImage(e.target.value)}\r\n              ></Form.Control>\r\n              <Form.File\r\n                id='image-file'\r\n                label='Choose File'\r\n                custom\r\n                onChange={uploadFileHandler}\r\n                style={{\r\n                  marginTop: '20px',\r\n                  display: 'block',\r\n                }}\r\n              ></Form.File>\r\n              {uploading && <Loader />}\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='brand'>\r\n              <Form.Label>Brand</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter brand'\r\n                value={brand}\r\n                onChange={(e) => setBrand(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <h1>Product composition</h1>\r\n            <Row>\r\n              <Col>\r\n                <Form.Group controlId='EnergyKJ'>\r\n                  <Form.Label>Energy KJ</Form.Label>\r\n                  <Form.Control\r\n                    type='text'\r\n                    placeholder='Enter Energy KJ'\r\n                    value={energyKJ}\r\n                    onChange={(e) => setEnergyKj(e.target.value)}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n              </Col>\r\n              <Col>\r\n                <Form.Group controlId='EnergyKcal'>\r\n                  <Form.Label>Energy Kcal</Form.Label>\r\n                  <Form.Control\r\n                    type='text'\r\n                    placeholder='Enter Energy Kcal'\r\n                    value={energyKcal}\r\n                    onChange={(e) => setEnergyKcal(e.target.value)}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n              </Col>\r\n              <Col>\r\n                <Form.Group controlId='Fat'>\r\n                  <Form.Label>Fat</Form.Label>\r\n                  <Form.Control\r\n                    type='text'\r\n                    placeholder='Enter Fat'\r\n                    value={fat}\r\n                    onChange={(e) => setFat(e.target.value)}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <Form.Group controlId='Acids'>\r\n                  <Form.Label>Acids</Form.Label>\r\n                  <Form.Control\r\n                    type='text'\r\n                    placeholder='Enter Acids'\r\n                    value={acids}\r\n                    onChange={(e) => setAcids(e.target.value)}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n              </Col>\r\n              <Col>\r\n                <Form.Group controlId='Carbohydrates'>\r\n                  <Form.Label>Carbohydrates</Form.Label>\r\n                  <Form.Control\r\n                    type='text'\r\n                    placeholder='Enter Carbohydrates'\r\n                    value={carbohydrates}\r\n                    onChange={(e) => setCarbohydrates(e.target.value)}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n              </Col>\r\n              <Col>\r\n                <Form.Group controlId='Sugars'>\r\n                  <Form.Label>Sugars</Form.Label>\r\n                  <Form.Control\r\n                    type='text'\r\n                    placeholder='Enter Sugars'\r\n                    value={sugars}\r\n                    onChange={(e) => setSugars(e.target.value)}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <Form.Group controlId='Fiber'>\r\n                  <Form.Label>Fiber</Form.Label>\r\n                  <Form.Control\r\n                    type='text'\r\n                    placeholder='Enter Fiber'\r\n                    value={fiber}\r\n                    onChange={(e) => setFiber(e.target.value)}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n              </Col>\r\n              <Col>\r\n                <Form.Group controlId='Protein'>\r\n                  <Form.Label>Carbohydrates</Form.Label>\r\n                  <Form.Control\r\n                    type='text'\r\n                    placeholder='Enter Protein'\r\n                    value={protein}\r\n                    onChange={(e) => setProtein(e.target.value)}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n              </Col>\r\n              <Col>\r\n                <Form.Group controlId='Salt'>\r\n                  <Form.Label>Salt</Form.Label>\r\n                  <Form.Control\r\n                    type='text'\r\n                    placeholder='Enter Salt'\r\n                    value={salt}\r\n                    onChange={(e) => setSalt(e.target.value)}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col className='md-3'>\r\n                <Form.Group controlId='Exprd'>\r\n                  <Form.Label>Can be expierd</Form.Label>\r\n                  <Form.Control\r\n                    as='select'\r\n                    type='bool'\r\n                    placeholder='Product expiration'\r\n                    value={isPromp}\r\n                    onChange={(e) => setIsPromp(e.target.value)}\r\n                  >\r\n                    <option>true</option>\r\n                    <option>false</option>\r\n                  </Form.Control>\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n            <h1>Barre code</h1>\r\n            <Row>\r\n              <Col>\r\n                <Form.Group controlId='origCode'>\r\n                  <Form.Label>Country of origine</Form.Label>\r\n                  <Form.Control\r\n                    type='number'\r\n                    placeholder='Enter Country of origine code'\r\n                    value={origCode}\r\n                    onChange={(e) => setOrigCode(e.target.value)}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n              </Col>\r\n              <Col>\r\n                <Form.Group controlId='FabCode'>\r\n                  <Form.Label>Producer code</Form.Label>\r\n                  <Form.Control\r\n                    type='number'\r\n                    placeholder='Enter Producer Code'\r\n                    value={fabCode}\r\n                    onChange={(e) => setFabCode(e.target.value)}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n              </Col>\r\n              <Col>\r\n                <Form.Group controlId='prodCode'>\r\n                  <Form.Label>Product Code</Form.Label>\r\n                  <Form.Control\r\n                    type='number'\r\n                    placeholder='Enter Product Code'\r\n                    value={prodCode}\r\n                    onChange={(e) => setProdCode(e.target.value)}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n              </Col>\r\n              <Col>\r\n                <Form.Group controlId='contrCode'>\r\n                  <Form.Label>Control key</Form.Label>\r\n                  <Form.Control\r\n                    type='number'\r\n                    placeholder='Enter Control key'\r\n                    value={contrCode}\r\n                    onChange={(e) => setContrCode(e.target.value)}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n            <h1>Expiration and Production</h1>\r\n            <Row>\r\n              <Col>\r\n                <Form.Group controlId='expDate'>\r\n                  <Form.Label>Expiration date</Form.Label>\r\n                  <Form.Control\r\n                    type='date'\r\n                    placeholder='Enter the expiration date'\r\n                    value={expDate}\r\n                    onChange={(e) => setExpDate(e.target.value)}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n              </Col>\r\n              <Col>\r\n                <Form.Group controlId='prodDate'>\r\n                  <Form.Label>Production date</Form.Label>\r\n                  <Form.Control\r\n                    type='date'\r\n                    placeholder='Enter Production date'\r\n                    value={prodDate}\r\n                    onChange={(e) => setProdDate(e.target.value)}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n\r\n            <Form.Group controlId='countInStock'>\r\n              <Form.Label>Count In Stock</Form.Label>\r\n              <Form.Control\r\n                type='number'\r\n                placeholder='Enter countInStock'\r\n                value={countInStock}\r\n                onChange={(e) => setCountInStock(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='category'>\r\n              <Form.Label>Category</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter category'\r\n                value={category}\r\n                onChange={(e) => setCategory(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='description'>\r\n              <Form.Label>Description</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter description'\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId='nutriScore'>\r\n              <Form.Label>Nutrition Score</Form.Label>\r\n\r\n              <Form.Control\r\n                as='select'\r\n                type='text'\r\n                placeholder='Enter the nutrition score'\r\n                value={nutriScore}\r\n                onChange={(e) => setNutriScore(e.target.value)}\r\n              >\r\n                <option>A</option>\r\n                <option>B</option>\r\n                <option>C</option>\r\n                <option>D</option>\r\n                <option>E</option>\r\n              </Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button\r\n              type='submit'\r\n              variant='primary'\r\n              style={{\r\n                marginTop: '20px',\r\n                display: 'block',\r\n              }}\r\n            >\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductEditScreen;\r\n","import React, { useEffect } from 'react';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Table, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport { listOrders } from '../actions/orderActions';\r\n\r\nconst OrderListScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const orderList = useSelector((state) => state.orderList);\r\n  const { loading, error, orders } = orderList;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listOrders());\r\n    } else {\r\n      history.push('/login');\r\n    }\r\n  }, [dispatch, history, userInfo]);\r\n\r\n  return (\r\n    <>\r\n      <h1>Orders</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className='table-sm'>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>USER</th>\r\n              <th>DATE</th>\r\n              <th>TOTAL</th>\r\n              <th>PAID</th>\r\n              <th>DELIVERED</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {orders.map((order) => (\r\n              <tr key={order._id}>\r\n                <td>{order._id}</td>\r\n                <td>{order.user && order.user.name}</td>\r\n                <td>{order.createdAt.substring(0, 10)}</td>\r\n                <td>${order.totalPrice}</td>\r\n                <td>\r\n                  {order.isPaid ? (\r\n                    order.paidAt.substring(0, 10)\r\n                  ) : (\r\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  {order.isDelivered ? (\r\n                    order.deliveredAt.substring(0, 10)\r\n                  ) : (\r\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  <LinkContainer to={`/order/${order._id}`}>\r\n                    <Button variant='light' className='btn-sm'>\r\n                      Details\r\n                    </Button>\r\n                  </LinkContainer>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderListScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Form, Table, Button, Row, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport { listStocks, createStock , deleteStock } from '../actions/stockAction';\r\nimport FormContainer from '../components/FormContainer';\r\n\r\nconst StockScreen = ({ history }) => {\r\n  const [name, setName] = useState('');\r\n  const [price, setPrice] = useState('');\r\n  const [qty, setQty] = useState('');\r\n  const [lequdationDate, setLequdationDate] = useState('');\r\n  const [receptionDate, setReceptionDate] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const stockItems = useSelector((state) => state.stockItems);\r\n  const { loading, error, stocks } = stockItems;\r\n\r\n  const stockCreate = useSelector((state) => state.stockCreate);\r\n  const {\r\n    loading: stockLoading,\r\n    error: stockError,\r\n    userInfo: stockUserInfo,\r\n  } = stockCreate;\r\n\r\n  const totalPrice = (stocks) => {\r\n     let total = 0;\r\n\r\n    for (const item in stocks) {\r\n     total += stocks[item].price\r\n    }\r\n    return total;\r\n  };\r\n\r\n  const totalStock = (stocks) => {\r\n     let total = 0;\r\n\r\n    for (const item in stocks) {\r\n     total += stocks[item].qty\r\n    }\r\n    return total;\r\n  };\r\n\r\n  \r\n  const totalItems = (stocks) => {\r\n     let total = 0;\r\n\r\n    for (const item in stocks) {\r\n     total ++;\r\n    }\r\n    return total;\r\n  };\r\n\r\n  console.log(totalPrice(stocks));\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listStocks());\r\n    } else {\r\n      history.push('/login');\r\n    }\r\n  }, [dispatch, history, userInfo]);\r\n\r\n  const submitHandler = (e) => {\r\n    dispatch(createStock(name, qty, price, lequdationDate, receptionDate));\r\n  };\r\n\r\n    const deleteHandler = (id) => {\r\n    if (window.confirm('Are you sure')) {\r\n      dispatch(deleteStock(id));\r\n      \r\n    }\r\n    window.location.reload();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1>Create Stock Order</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <FormContainer>\r\n          <h1>Sign Up</h1>\r\n          {error && <Message variant='danger'>{error}</Message>}\r\n          {loading && <Loader />}\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='name'>\r\n              <Form.Label>Product name</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter product name'\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='price'>\r\n              <Form.Label>Unitary price</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter price'\r\n                value={price}\r\n                onChange={(e) => setPrice(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Row>\r\n              <Col>\r\n                <Form.Group controlId='qty'>\r\n                  <Form.Label>Quantity</Form.Label>\r\n                  <Form.Control\r\n                    type='number'\r\n                    placeholder='Enter qty'\r\n                    value={qty}\r\n                    onChange={(e) => setQty(e.target.value)}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n              </Col>\r\n\r\n              <Row>\r\n                <Col>\r\n                  <Form.Group controlId='receptionDate'>\r\n                    <Form.Label>Reception date</Form.Label>\r\n                    <Form.Control\r\n                      type='date'\r\n                      placeholder='Reception Date'\r\n                      value={receptionDate}\r\n                      onChange={(e) => setReceptionDate(e.target.value)}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                </Col>\r\n                <Col>\r\n                  <Form.Group controlId='lequdtionDtae'>\r\n                    <Form.Label>Lequidation date</Form.Label>\r\n                    <Form.Control\r\n                      type='date'\r\n                      placeholder='Enter Final date'\r\n                      value={lequdationDate}\r\n                      onChange={(e) => setLequdationDate(e.target.value)}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                </Col>\r\n              </Row>\r\n            </Row>\r\n\r\n            <Button\r\n              type='submit'\r\n              variant='primary'\r\n              style={{\r\n                marginTop: '20px',\r\n                display: 'block',\r\n              }}\r\n            >\r\n              Add\r\n            </Button>\r\n          </Form>\r\n        </FormContainer>\r\n      )}\r\n      <h1>Stock history</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <Table\r\n          striped\r\n          bordered\r\n          hover\r\n          responsive\r\n          className='table-sm'\r\n          variant='dark'\r\n        >\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>NAME</th>\r\n              <th>QUANTITY</th>\r\n              <th>UNIT PRICE</th>\r\n              <th>ENTRY</th>\r\n              <th>OUT</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {stocks.map((item) => (\r\n              <tr key={item._id}>\r\n                <td>{item._id}</td>\r\n                <td>{item.name}</td>\r\n                <td>{item.qty}</td>\r\n                <td>{item.price}</td>\r\n                <td>{item.lequdationDate.substring(0, 10)}</td>\r\n                <td>{item.receptionDate.substring(0, 10)}</td>\r\n                <td>\r\n                                    <Button\r\n                      variant='danger'\r\n                      className='btn-sm text-center'\r\n                      onClick={() => deleteHandler(item._id)}\r\n                    >\r\n                      <i className='fas fa-trash'></i>\r\n                    </Button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n      <h1>Statistics</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <Row>\r\n          <Col className='md-4'>\r\n            <div class='card text-white bg-dark mb-3'>\r\n              <div class='card-header'>Section 1</div>\r\n              <div class='card-body'>\r\n                <h5 class='card-title'>Stock Items Count</h5>\r\n                <p class='card-text'>\r\n                  There is a total of <h1 class=\"text-success\">{totalItems(stocks) } Products </h1>  / items in our store \r\n                </p>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n          <Col>\r\n            <div class='card text-white bg-dark mb-3'>\r\n              <div class='card-header'>Section 2</div>\r\n              <div class='card-body'>\r\n                <h5 class='card-title'>Totale Cost</h5>\r\n                <p class='card-text'>\r\n                  There in a total of  <h1 class=\"text-success\">{totalPrice(stocks)} €</h1> Euros of marchendise stocked in\r\n                  our wehrehouses\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n          <Col>\r\n            <div class='card text-white bg-dark mb-3'>\r\n              <div class='card-header'>Section 3</div>\r\n              <div class='card-body'>\r\n                <h5 class='card-title'>Total Stock</h5>\r\n                <p class='card-text'>\r\n                  There is <h1 class=\"text-success\">{totalStock(stocks) } Pcs/Kg</h1> \r\n                   in total quantity stored in mass of\r\n                  of goods\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StockScreen;\r\n","import axios from 'axios';\r\nimport {\r\n  STOCK_CREATE_FAIL,\r\n  STOCK_CREATE_REQUEST,\r\n  STOCK_CREATE_SUCCESS,\r\n  STOCK_LIST_FAIL,\r\n  STOCK_LIST_REQUEST,\r\n  STOCK_LIST_SUCCESS,\r\n  STOCK_DELETE_REQUEST,\r\n  STOCK_DELETE_SUCCESS,\r\n  STOCK_DELETE_FAIL\r\n} from '../constants/stockConstants';\r\nimport { logout } from './userActions';\r\n\r\nexport const listStocks = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: STOCK_LIST_REQUEST });\r\n\r\n    const { data } = await axios.get('/api/stock');\r\n\r\n    dispatch({ type: STOCK_LIST_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: STOCK_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createStock =\r\n  (name, price, qty, lequdationDate, receptionDate) =>\r\n  async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: STOCK_CREATE_REQUEST,\r\n      });\r\n\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\r\n        `/api/stock`,\r\n        { name, price, qty, lequdationDate, receptionDate },\r\n        config\r\n      );\r\n\r\n      dispatch({\r\n        type: STOCK_CREATE_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message;\r\n\r\n      dispatch({\r\n        type: STOCK_CREATE_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const deleteStock = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: STOCK_DELETE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    await axios.delete(`/api/stock/${id}`, config);\r\n\r\n    dispatch({\r\n      type: STOCK_DELETE_SUCCESS,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: STOCK_DELETE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Container } from 'react-bootstrap';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport HomeScreen from './screens/HomeScreen';\nimport ProductScreen from './screens/ProductScreen';\nimport CartScreen from './screens/CartScreen';\nimport LoginScreen from './screens/LoginScreen';\nimport RegisterUserScreen from './screens/RegisterUserScreen';\nimport RegisterProdScreen from './screens/RegisterProdScreen';\nimport ProfileScreen from './screens/ProfileScreen';\nimport ShipingScreen from './screens/ShipingScreen';\nimport PaymentScreen from './screens/PaymentScreen';\nimport PlaceOrderScreen from './screens/PlaceOrderScreen';\nimport OrderScreen from './screens/OrderScreen';\nimport FridgeScreen from './screens/FridgeScreen';\nimport UserListScreen from './screens/UserListScreen';\nimport UserEditScreen from './screens/UserEditScreen';\nimport ProductListScreen from './screens/ProductListScreen';\nimport ProductEditScreen from './screens/ProductEditScreen';\nimport OrderListScreen from './screens/OrderListScreen';\nimport StockListScreen from './screens/StockScreen';\n\nconst App = () => {\n  return (\n    <Router>\n      <Header />\n      <main className='py-3'>\n        <Container>\n          <Route path='/shipping' component={ShipingScreen} exact />\n          <Route path='/fridge' component={FridgeScreen} exact />\n          <Route path='/order/:id' component={OrderScreen} exact />\n          <Route path='/payment' component={PaymentScreen} exact />\n          <Route path='/placeorder' component={PlaceOrderScreen} exact />\n          <Route path='/login' component={LoginScreen} exact />\n          <Route path='/register' component={RegisterUserScreen} exact />\n          <Route path='/profile' component={ProfileScreen} exact />\n          <Route path='/registerpro' component={RegisterProdScreen} exact />\n          <Route path='/product/:id' component={ProductScreen} exact />\n          <Route path='/cart/:id?' component={CartScreen} exact />\n          <Route path='/admin/userlist' component={UserListScreen} exact />\n          <Route path='/admin/stocklist' component={StockListScreen} exact />\n\n          <Route\n            path='/admin/productlist'\n            component={ProductListScreen}\n            exact\n          />\n          <Route path='/admin/orderlist' component={OrderListScreen} exact />\n          <Route path='/admin/user/:id/edit' component={UserEditScreen} exact />\n          <Route path='/admin/user/:id/edit' component={UserEditScreen} exact />\n\n          <Route\n            path='/admin/product/:id/edit'\n            component={ProductEditScreen}\n            exact\n          />\n          <Route path='/' component={HomeScreen} exact />\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport './bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nvar Tawk_API = Tawk_API || {},\n  Tawk_LoadStart = new Date();\n(function () {\n  var s1 = document.createElement('script'),\n    s0 = document.getElementsByTagName('script')[0];\n  s1.async = true;\n  s1.src = 'https://embed.tawk.to/60d54f5f65b7290ac637cf94/1f90js3ot';\n  s1.charset = 'UTF-8';\n  s1.setAttribute('crossorigin', '*');\n  s0.parentNode.insertBefore(s1, s0);\n})();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}